[from-gw]
exten => _X.,1,NoOp(Call from GW: Caller - ${CALLERID(num)})
same => n,Set(CID=${CALLERID(num)})
same => n,set(EXT=${EXTEN})
same => n,ExecIf($[${LEN(${CID})}=12]?Set(CID=${CID:3}))
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,NoOp(EXTensionsss========${EXTEN})


same => n,gotoif($["${myconn}" = ""]?dummycall)
same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port = ${EXT})
same => n,MYSQL(Fetch fetch ${result} dummy)
same => n,MYSQL(Query result ${myconn} select count(calldate)>1 from cdr where dst like "%${CID}" and calldate > CURDATE())
same => n,MYSQL(Fetch fetch ${result} Callback_is_done)
same => n,GotoIf($[${Callback_is_done}=1]?dummycall)
same => n,MYSQL(Query result ${myconn} select src from (select src,dst from cdr where disposition = "NO ANSWER" and dst like "%${CID}" limit 1) data ) ;where src like "1__________")
same => n,MYSQL(Fetch fetch ${result} CALLTO)
same => n,gotoif($[${fetch}=1]?:dummycall)
;check if callback number in whitelist
same => n,MYSQL(Connect wtlconn ${WTLHOST} ${WTLUSER} ${WTLPASS} ${WTLNAME})
same => n,MYSQL(Query wtlres ${wtlconn} select number from cid where number like "%${CALLTO}")
same => n,MYSQL(Fetch wtlfetch ${wtlres} FOUND)
same => n,gotoif($[${wtlfetch}=1]?:dummycall)
same => n,Set(TIMEOUT(absolute)=150)
;same => n,Dial(SIP/asterisk/678150555)
;same => n,Dial(SIP/voicetrading/${FOUND},60,L(90000))



;same => n,Dial(SIP/voicetrading/12404818450)
;same => n,Hangup()
;same => n(dummycall),MYSQL(Query result ${myconn} update  callback set cid=${CID} where port=${EXT})

same => n(dummycall),Dial(SIP/asterisk/678150555)
same => n,Hangup()

exten => h,1,Noop(Check duration - ${CDR(duration)})
same => n,MYSQL(Query result ${myconn} update ports set busy = 0 where port = ${EXT})

same => n,MYSQL(Query result ${myconn} select NOW())
same => n,MYSQL(Fetch fetch ${result} currentDate)


;same => n,MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause = DATE_ADD("${currentDate}", INTERVAL 1 MINUTE) where port = ${EXT})


same => n,Gotoif($[${CDR(duration)}<30]?initcall:hangup)
same => n(initcall),MYSQL(Query result ${myconn} select port from routes where number like "%${CID}" limit 1)
same => n,MYSQL(Fetch fetch ${result} port)
same => n,Gotoif($[${fetch}=1]?:hangup)
same => n,MYSQL(Query result ${myconn} select datedisabled IS NULL from ports where port = ${port})
same => n,MYSQL(Fetch fetch ${result} ddisabled)
same => n,Gotoif($[${ddisabled}=0]?hangup)
same => n(addzero),Gotoif($[${port}<10]?addtwo:checkSec)
same => n(addtwo),Set(EXT=00${port:0:1})
same => n,Goto(dial)
same => n(checkSec),Gotoif($[${port}>99]?three)
same => n(addone),Set(EXT=0${port:0:2})
same => n,Goto(dial)
same => n(three),Set(EXT=${port:0:3})
same => n(dial),Set(Pause=${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})})



same => n,MYSQL(Query result ${myconn} select cid  from callback where port =${EXT})
same => n,MYSQL(Fetch fetch ${result} cidi)
;avoid 2 consecutive callback coming from sam incoming number
same => n,Gotoif($[${cidi}=${CID}]?hangup)
;same => n,System(/root/callback.sh 88${EXT}${CID} ${Pause})
same => n,MYSQL(Query result ${myconn} update  callback set cid=${CID} where port=${EXT})

same => n(hangup),Hangup()


[wholesale]


exten => _7772376900XXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN})
same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
same => n,Hangup

;wholesale traffic
exten => _77723769XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

exten => _77723768[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

exten => _77723765[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

;rewrite callee number

exten => _7772379XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)

exten => _7772378[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)

exten => _7772375[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)





;retail going to wholesale by mistakei

exten => _2376XXXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
;same => n,Set(CALLNUM=${EXTEN})
;same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
;same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
;same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))

same => n,Hangup(42)

exten => _23769XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(verification,${EXTEN},1)


exten =>  _23768[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(verification,${EXTEN},1)

exten => _23765[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(verification,${EXTEN},1)


;rewrite callee number for retail going on wholesale by mistake

exten => _2379XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(verification,${CALLNUM},1)

exten => _2378[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(verification,${CALLNUM},1)

exten => _2375[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(verification,${CALLNUM},1)






[incoming]
;Manual port choosing
;exten => _XXX#2376XXXXXXXX,1,Set(CDR(accountcode)=${EXTEN:0:3})
exten => _XXX#X.,1,Set(CDR(accountcode)=${EXTEN:0:3})

;same => n,Answer()
;same => n,Progress()
same => n,Set(EXT=${EXTEN:0:3})
same => n,Set(Dropped=0)
same => n,Set(CurrentPort=0)
same => n,Set(dialok=0)
same => n,Set(AddNewNum=0)
same => n,Set(CALLNUM=${EXTEN:4})
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,gotoif($["${myconn}" = ""]?dberror)
same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=${EXT})
same => n,Set(dialok=1)
same => n,Dial(Local/${EXT}${EXTEN:7}@init-call,${RAND(120,150)})
same => n,NoOp(dial status : ${DIALSTATUS})

same => n,Hangup()

exten => _678150555,1,Set(CDR(accountcode)=${EXTEN:0:3})
same => n,Dial(SIP/asterisk/${EXTEN})
same => n,Hangup()
;nexttel retail coming from another server whith the correct port
exten => _999X.,1,NoOp(MTN  retail traffic)
same => n,Dial(SIP/goip135/${EXTEN:3})
same => n,Hangup()
;same => n,Set(junky=${RAND(1,2)})
;same => n,GotoIf(junky=1?raoul)

;exten => _7772376900XXXXX,1,NoOp(Wholesale traffic, sending to Verification)
;same => n,Set(CALLNUM=${EXTEN})
;same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
;same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
;same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
;same => n,Hangup



;wholesale traffic
exten => _77723769XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

exten => _77723768[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

exten => _77723765[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=${EXTEN:3})
same => n,GoTo(verification,${EXTEN:3},1)

;rewrite callee number

exten => _7772379XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)

exten => _7772378[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)

exten => _7772375[5-9]XXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:6})
same => n,GoTo(verification,${CALLNUM},1)



; retail traffic Normal dial
;exten => _2376900XXXXX,1,NoOp(Wholesale traffic, sending to Verification)
;same => n,Set(CALLNUM=${EXTEN})
;same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
;same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
;same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
;same => n,Hangup(42)

;exten => _23769994XXXX,1,NoOp(Wholesale traffic, sending to Verification)
;same => n,Set(CALLNUM=${EXTEN})
;same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
;same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
;same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
;same => n,Hangup(42)





same => n,Hangup(42)

exten => _2376XXXXXXXX,1,NoOp(orange)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)
;same => n,Hangup

exten => _23766XXXXXXX,1,NoOp(orange)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)


exten => _256XXXXXXXXX,1,NoOp(orange)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)


exten =>  _23768[5-9]XXXXXX,1,NoOp(retail traffic,)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)

exten => _23765[5-9]XXXXXX,1,NoOp(retail traffic)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)


exten => _243XXXXXXXXX,1,NoOp(DRC)
same => n,Set(CALLNUM=${EXTEN})
same => n,GoTo(retail,${EXTEN},1)



;rewrite callee number for retail

exten => _2379XXXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(retail,${CALLNUM},1)

exten => _2378[5-9]XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(retail,${CALLNUM},1)

exten => _2375[5-9]XXXXXXX,1,NoOp(Wholesale traffic, sending to Verification)
same => n,Set(CALLNUM=2376${EXTEN:3})
same => n,GoTo(retail,${CALLNUM},1)




[retail]





exten => _X.,1,NoOp(Retail call: ${EXTEN})

;eviter que la recherche du port soit en meme temps sur le meme port


;same => n,Set(junky=${RAND(1,3)})

;same => n,NoOp(junky = ${junky}======+++++++=======+++++++++======)

;same => n,GotoIf($[${junky}=1]?christian)
;same => n,GotoIf($[${junky}=2]?gaby:raoul)
;same => n,NoOp(junky = ${junky}======+++++++=======+++++++++======)
;same => n(christian),Dial(SIP/abdou/${EXTEN})
;same => n,Hangup()


;same => n(gaby),Dial(SIP/toGaby/${EXTEN})
;same => n,Hangup()



same => n,Set(dialok=0)
same => n,Set(AddNewNum=0)
;same => n,Set(EXTEN=${CALLNUM})
same => n,Set(Dropped=0)
same => n,Set(CurrentPort=0)
same => n,Set(EXT="")




;vefifie si le callee est ds la temp black list
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})


;disable port in the night hours

;same => n(night),MYSQL(Query result ${myconn} select HOUR(NOW()))
;same => n,MYSQL(Fetch fetch ${result} NIGHT)
;same => n,NoOp(NIGHT =${NIGHT})
;same => n,GotoIf($[$[${NIGHT}=22]]?:minuit)
;same => n,set(NIGHT =6-${NIGHT})
;same => n,MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL 7 HOUR))
;same => n,goto(chktempblacklist)
;same => n(minuit),GotoIf($[$[${NIGHT}=23]]?:chktempblacklist)
;same => n,MYSQL(Query result ${myconn} update ports set  datedisabled=NOW())

;same => n,NoOp(chek tempblacklisted)
; check for tempblacklisted
;same => n(chktempblacklist),MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM} and incr>3)
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,gotoif($[${fetch}=1]?tempblacklisted)
;same => n,MYSQL(Query result ${myconn} insert into tempblacklist values(${CALLNUM},1,NOW()))



; che

same => n(checkwhitelist),NoOp( Check if the number is in whitelist )
same => n,GoTo(findchannel)
;check if call is in whitelist
same => n,MYSQL(Query result ${wtlconn} select number from whitelist where number=${CALLNUM} limit 1)
;same => n,goto(resultat)
;same => n(requete),MYSQL(Query result ${wtlconn} select number from whitelist where number=${CALLNUM} and (cid ="${CALLERID(num)}" or cid ="+${CALLERID(num)}") limit 1)
same => n(resultat),MYSQL(Fetch fetch ${result} number)
same => n,ExecIf($[${fetch}=1]?GoTo(findchannel))



;same => n,NoOp(chek tempblacklisted)
; check for tempblacklisted
;same => n(chktempblacklist),MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM})
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,gotoif($[${fetch}=1]?tempblacklisted)
;same => n,MYSQL(Query result ${myconn} insert into tempblacklist values(${CALLNUM},1,NOW()))

;check if caller is in black cdr
;same => n,gotoif($["${sign}"="+"]?:requete2)
;same => n,MYSQL(Query result ${myconn} select src from cdr where userfield like "%blackcid%" and (src ="${CALLERID(num):1}" or src ="${CALLERID(num)}") limit 1)
;same => n,goto(resultat2)
;same => n(requete2),MYSQL(Query result ${myconn} select src from cdr where userfield like "%blackcid%" and (src ="${CALLERID(num)}" or src ="+${CALLERID(num)}") limit 1)
;same => n(resultat2),MYSQL(Fetch fetch ${result} cid)
;same => n,gotoif($[${fetch}=1]?blackcid)


;same => n,MYSQL(Query result ${myconn} select dst from cdr where userfield like "%blacklist%" and dst =${CALLNUM} limit 1)
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,gotoif($[${fetch}=1]?blacklisted)

;verifie si le caller et callee est dans la whitelist
;same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})






;verifie si le caller est dans la blackcid
same => n,gotoif($["${sign}"="+"]?:requete3)
same => n,MYSQL(Query result ${wtlconn} select cid from blackcid where cid ="${CALLERID(num):1}" or cid ="${CALLERID(num)}" limit 1)
same => n,goto(resultat3)
same => n(requete3),MYSQL(Query result ${wtlconn} select cid from blackcid where cid ="${CALLERID(num)}" or cid ="+${CALLERID(num)}" limit 1)
same => n(resultat3),MYSQL(Fetch fetch ${result} cid)
same => n,gotoif($[${fetch}=1]?blackcid)

;vefifie si le callee est ds la black list
same => n(chkblacklist),MYSQL(Query result ${wtlconn} select number from blacklist where number=${CALLNUM} limit 1)
same => n,MYSQL(Fetch fetch ${result} number)
same => n,gotoif($[${fetch}=1]?blacklisted)

; check for tempblacklisted
same => n,Hangup(42)

;verifie si le caller est dans la

;same => n(chktempblacklist),NoOp(for numbber starting by 2376900 )
;same => n(chktempblacklist),MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM} and incr>1)
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,gotoif($[${fetch}=1]?tempblacklisted)


;block black list number
;same => n,NoOp(${CALLNUM:0:7})
;same => n,gotoif($[${CALLNUM:0:7}=2376999]?stop)
;same => n,gotoif($[${CALLNUM:0:7}=2376900]?stop:findchannel)

;same => n(stop),Hangup(42)



same => n(findchannel),Set(junky=${RAND(4,4)})
;verifie si le caller est dans la blackcid
;same => n,gotoif($["${sign}"="+"]?:requete31)
;same => n,MYSQL(Query result ${wtlconn} select cid from blackcid where cid ="${CALLERID(num):1}" or cid ="${CALLERID(num)}" limit 1)
;same => n,goto(resultat31)
;same => n(requete31),MYSQL(Query result ${wtlconn} select cid from blackcid where cid ="${CALLERID(num)}" or cid ="+${CALLERID(num)}" limit 1)
;same => n(resultat31),MYSQL(Fetch fetch ${result} cid)
;same => n,gotoif($[${fetch}=1]?blackcid)
;same => n,Hangup(42)

same => n(chktempblacklist),NoOp(check temp black list )
;same => n,MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM})
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,gotoif($[${fetch}=1]?tempblacklisted)
;same => n,MYSQL(Query result ${myconn} insert into tempblacklist values(${CALLNUM},1,NOW()))
;same => n,NoOp(junky = ${junky}======+++++++=======+++++++++======)

;same => n,GotoIf($[${junky}=1]?gaby)
;same => n,GotoIf($[${junky}=2]?christian)
;same => n,GotoIf($[${junky}=3]?christian2:raoul)
;same => n,NoOp(junky = ${junky}======+++++++=======+++++++++======)
;same => n(christian),Dial(SIP/abdou/${EXTEN})
;same => n,Hangup()


;same => n(gaby),Dial(SIP/toGaby/${EXTEN})
;same => n,Hangup()

;same => n(christian2),Dial(SIP/toChristian2/${EXTEN})
;same => n,Hangup()



;same => n(findchannel),Set(EXTEN=${CALLNUM})

same => n,NoOp(avoid many calls on same channel)
same => n,NoOp(speedd leng === ${LEN(${speed})})
same => n,GotoIf($[${speed}=0]?conti4)
same => n,GotoIf($[${LEN(${speed})}>3]?conti4)
same => n,NoOp(speedd === ${speed})


same => n,Set(GLOBAL(speed)=${speed}+1)

;same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=14)
same => n,Dial(Local/000${CALLNUM:3}@init-call,${RAND(120,150)})
;same => n,MYSQL(Query result ${myconn} update ports set busy = 0 where port=14)


same => n,Hangup(42)
same => n(conti4),Set(GLOBAL(speed)=1)

same => n,Set(PREFIXNUMBER=${CALLNUM:0:5})
same => n,NoOp(${PREFIXNUMBER})
same => n,Set(PREFIXNUMBER=${CALLNUM:0:3})



;change country codes here for grouping



same => n,GotoIf($[${CALLNUM:0:5}=23766]?CAMEROONNEXTEL)
;fing the channel where to send call


same => n,GotoIf($[[${CALLNUM:0:5}=23769] | $[${CALLNUM:0:6}=237655] | $[${CALLNUM:0:6}=237656] | $[${CALLNUM:0:6}=237657] | $[${CALLNUM:0:6}=237658] | $[${CALLNUM:0:6}=237659] | $[${CALLNUM:0:6}=237685] | $[${CALLNUM:0:6}=237686] | $[${CALLNUM:0:6}=237687] | $[${CALLNUM:0:6}=237688] | $[${CALLNUM:0:6}=237689]]?CAMEROONORANGE)
;fing the channel where to send call

same => n,GotoIf($[[${CALLNUM:0:5}=23767]|$[${CALLNUM:0:6}=237650]|$[${CALLNUM:0:6}=237651]|$[${CALLNUM:0:6}=237652]|$[${CALLNUM:0:6}=237653]|$[${CALLNUM:0:6}=237654]|$[${CALLNUM:0:6}=237680]|$[${CALLNUM:0:6}=237681]|$[${CALLNUM:0:6}=237682]|$[${CALLNUM:0:6}=237683]|$[${CALLNUM:0:6}=237684]]?CAMEROONMTN)
;fing the channel where to send call

same => n,GotoIf($[${CALLNUM:0:3}=256]?UGANDA)
;fing the channel where to send call

same => n,GotoIf($[${CALLNUM:0:3}=243]?DRC)
;CHAGE PORT ID HERE


same => n,Hangup(42)

same => n(CAMEROONNEXTEL),NoOp(CAMEROON)

same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},1,8)


same => n,goto(nextStep)

same => n(CAMEROONORANGE),NoOp(CAMEROON)

same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},9,24)


same => n,goto(nextStep)

same => n(CAMEROONMTN),NoOp(CAMEROON)

same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},9,24)

same => n,goto(nextStep)



same => n(DRC),NoOp(DRC)

same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},25,32)
same => n,goto(nextStep)


same => n(UGANDA),NoOp(UGANDA)


same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},33,36)

same => n,goto(nextStep)

;same => n(CAMEROON),NoOp(CAMEROON)

;same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},1,8)


;same => n(CAMEROON),NoOp(CAMEROON)

;same => n(raoul),AGI(/var/lib/asterisk/agi-bin/select_port.py,${CALLNUM},${FIRSTPAUSEMIN},${FIRSTPAUSEMAX},${TRYCALLMIN},${TRYCALLMAX},${SECONDPAUSEMIN},${SECONDPAUSEMAX},1,8)











same => n(nextStep),GotoIf($[${ERROR}=1]?dberror)
same => n,GotoIf($[${ERROR}=2]?lastport)
;same => n,gotoif($[${EXT}=""]?lastport)
same => n,MYSQL(Query result ${myconn} UPDATE tempblacklist SET `incr`=`incr` + 1,`dateadded`=NOW() WHERE `number` =${CALLNUM})
;same => n,MYSQL(Query result ${myconn} UPDATE tempblacklist SET `dateadded`=NOW() WHERE `number` =${CALLNUM})
same => n,MYSQL(Query result ${myconn} insert into tempblacklist values(${CALLNUM},1,NOW()))
same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=${EXT})

same => n,Set(GLOBAL(speed)=0)
same => n,Set(dialok=1)
same => n,Set(CDR(port)=${EXT})

same => n,gotoIf($[${CALLNUM:0:3}=243]?congoDial)
same => n,Dial(Local/${EXT}${CALLNUM:3}@init-call,${RAND(120,150)})
same => n,goto(endCongoDial)
same => n(congoDial),Dial(Local/${EXT}${CALLNUM}@init-call,${RAND(120,150)})
same => n(endCongoDial),NoOp("end congo dial")
;check for channel available and send to backup route
same => n,NoOp(Dial status: ${DIALSTATUS})
same => n,Gotoif($[$[${DIALSTATUS}="CHANUNAVAIL"] | $[${DIALSTATUS}="CONGESTION"]]?:chavail)
same => n,Dial(Local/000${CALLNUM:3}@init-call,${RAND(120,150)})
same => n,hangup()

; avoide consecutive same number when first call duration is more than zero
same => n(chavail),GotoIf($[${CDR(billsec)}>0]?:suivant)
same => n,MYSQL(Query result ${myconn} UPDATE tempblacklist SET `incr`=`incr` + 1 WHERE `number` =${CALLNUM})



;insert data to a cntral white list
same => n(suivant),GotoIf($[${CDR(billsec)}>59]?:hang)

same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
same => n,MYSQL(Query result ${wtlconn} insert into whitelist(`number`,`cid`,`dateadded`) values(${CALLNUM},"${CALLERID(num)}",NOW()))

same => n,MYSQL(Query result ${wtlconn} insert into whitecid values("${CALLERID(num)}",NOW()))

same => n(hang),Hangup(42)

;Hangups
;Hangups
same => n(dberror),noop(~~~~~~~DROPPED-BY-DB-CONNECTUION-ERROR~~~~~~~~)
same => n,Set(CDR(userfield)="Database connection error")
same => n,Set(Dropped=1)
same => n,Set(GLOBAL(speed)=0)
same => n,hangup(42)

same => n(lastport),noop(~~~~~~~DROPPED-BY-LAST-AVAIL-PORT~~~~~~~~)
same => n,Set(CDR(userfield)="No available ports")
same => n,Set(GLOBAL(speed)=0)
same => n,Set(Dropped=1)

;same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=14)
same => n,Dial(Local/000${CALLNUM:3}@init-call,${RAND(120,150)})
;same => n,MYSQL(Query result ${myconn} update ports set busy = 0 where port=14)



;same => n,Dial(SIP/tsoben/${EXTEN})
;same => n(abdou),Dial(SIP/abdou/${EXTEN})

same => n,hangup(42)




same => n(blackcid),noop(~~~~~~~DROPPED-BY-BLACK-CID~~~~~~~~)
same => n,Set(CDR(userfield)="black cid")
same => n,Set(Dropped=1)

same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
same => n,Set(GLOBAL(speed)=0)
same => n,Hangup(42)




same => n(tempblacklisted),noop(~~~~~~~DROPPED-BY-TEMP-BLACKLISTED~~~~~~~~)
same => n,Set(CDR(userfield)="temp blacklisted")
;same => n,Dial(SIP/tsoben/${EXTEN})
same => n,Set(GLOBAL(speed)=0)
same => n,MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM} and incr>8)
same => n,MYSQL(Fetch fetch ${result} number)
same => n,gotoif($[${fetch}=1]?blacklisted)

;same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=14)
same => n,Dial(Local/000${CALLNUM:3}@init-call,${RAND(120,150)})
;same => n,MYSQL(Query result ${myconn} update ports set busy = 0 where port=14)
;same => n(abdou),Dial(SIP/abdou/${EXTEN})

same => n,Set(Dropped=1)
same => n,hangup(42)


same => n(blacklisted),noop(~~~~~~~DROPPED-BY-BLACKLISTED~~~~~~~~)
same => n,Set(CDR(userfield)="blacklist")
same => n,Set(Dropped=1)
same => n,Set(GLOBAL(speed)=0)

same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,Hangup(42)


exten => h,1,Noop(-Hangup procedures-)
same => n,gotoif($[${EXT}!=""]?:unchavail)
same => n,MYSQL(Query result ${myconn} update ports set busy=0 where port=${EXT})
;same => n,Gotoif($[$[port=""]]?:unchavail)
;same => n,MYSQL(Query result ${myconn} update ports set busy=0 where port=32)


;DAY LIMIT

same => n,NoOp(day limit 00000000000000000000000000000000000000)
same => n,MYSQL(Query result ${myconn} select CURDATE())
same => n,MYSQL(Fetch fetch ${result} DATEJOUR)
same => n,NoOp(date jour = ${DATEJOUR}  00000000000000000000000000000000000000)
same => n,Set(daylimitsecond=$[60*${DAYLIMIT${EXT}}])
same => n,MYSQL(Query result ${myconn} select sum(billsec) < ${daylimitsecond} from cdr where calldate like "${DATEJOUR}%")
same => n,MYSQL(Fetch fetch ${result} jourlimit)
same => n,NoOp(result ==========${jourlimit})
same => n,gotoIf($[${jourlimit}=1]?nojourlimit)
same => n,MYSQL(Query result ${myconn} UPDATE ports SET datedisabled=NOW(),reason="DAY LIMIT"  WHERE port=${EXT})
same => n(nojourlimit),NoOp(ext = ${EXT}  00000000000000000000000000000000000000)

;PACKAGE LIMIT  100 min from starting date or 7 day expired for example
same => n,Set(packagelimitsecond=$[60*${DAYLIMIT${EXT}}*${PACKAGELIMIT${EXT}}]); check for 700 min expire from starting date
same => n,MYSQL(Query result ${myconn} select NOW());find current date
same => n,MYSQL(Fetch fetch ${result} NOWDATE)

same => n,MYSQL(Query result ${myconn} UPDATE expiredate SET expiration=DATE_ADD($[${ACTIVATESIM${EXT}}], INTERVAL $[${PACKAGELIMIT${EXT}}] DAY));find from  witch date u get expired package


same => n,MYSQL(Query result ${myconn} select UNIX_TIMESTAMP(expiration) from expiredate)
same => n,MYSQL(Fetch fetch ${result} EXPIREDATE)

;same => n,Set(EXPIREDATE=$[${ACTIVATESIM${EXT}}+${PACKAGELIMIT${EXT}}]);find from  witch date u get expired package
same => n,MYSQL(Query result ${myconn} select sum(billsec) < ${packagelimitsecond}  from cdr where  port=${EXT} and calldate > ${ACTIVATESIM${EXT}})
same => n,MYSQL(Fetch fetch ${result} packagelimit)
same => n,NoOp(package limit = ${packagelimit})
same => n,gotoIf($[$[${packagelimit}=1] or $[${packagelimit}=NULL]]?nopackagelimit)
same => n,MYSQL(Query result ${myconn} UPDATE ports SET datedisabled=NOW(),reason="PACK LIMIT"  WHERE port=${EXT})

same => n(nopackagelimit),NoOp(ext = ${EXT}  EXPIRE_DATE = ${EXPIREDATE}  === NOWDATE==  ${EPOCH} uuuuu00000000000000000000000000000000000000)
same => n,gotoIf($[${EPOCH}<${EXPIREDATE}]?nopackagelimit2);${EPOCH} is NOZDATE in second
same => n,MYSQL(Query result ${myconn} UPDATE ports SET datedisabled=NOW(),reason="PACK LIMIT"  WHERE port=${EXT})

same => n(nopackagelimit2),NoOp(date jour = ${DATEJOUR}  00000000000000000000000000000000000000)


; CHECK IVR


;If not answered check for IVR
;same => n,NoOp(dialstatu ==== ${DIALSTATUS}  dropped = ${Dropped}  dialok = ${dialok} bilsec =${CDR((billsec)}))
;same => n,ExecIf($[$[!"${DIALSTATUS}":"ANSWER"]&$[${Dropped}=0]&$[${dialok}=1]]?Noop(Checking channel record for IVR))
;same => n,NoOp(dial status: ${DIALSTATUS}, billsec: ${CDR((billsec)}, droped: ${Dropped}, dialok: ${dialok}))
;same => n,gotoif($[$[$["${DIALSTATUS}"="BUSY"]|$[${CDR(billsec)}<7]]&$[$[${Dropped}=0]&$[${dialok}=1]]]?nocheck_ivr)
;same => n,AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},${CALLNUM},${BLOCKTIME})
same => n(nocheck_ivr),NoOp(dial status)
;same => n,ExecIf($[${dialok}=1]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},${CALLNUM},${BLOCKTIME}))
;same => n,ExecIf($[${dialok}=1]?AGI(/var/lib/asterisk/agi-bin/chekwa.py))








same => n,MYSQL(Query result ${myconn} select lastpause from ports where port =${EXT})
same => n,MYSQL(Fetch fetch ${result} dernierePause)
same => n,MYSQL(Query result ${myconn} select NOW())
same => n,MYSQL(Fetch fetch ${result} currentDate)


;same => n,GotoIf($[${dernierePause}<${currentDate}]?:lastPauseDate)
same => n,MYSQL(Query result ${myconn} update ports set calls_left=0, lastpause = DATE_ADD("${currentDate}", INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port = ${EXT})
;same => n,goto(unchavail)
;same => n(lastPauseDate),MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause = DATE_ADD("${dernierePause}", INTERVAL 1 MINUTE) where port = ${EXT})





;same => n,MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL 1 MINUTE) where port = ${EXT})
;same => n,MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause = DATE_ADD(${lastpause}, INTERVAL 1 MINUTE) where port = ${EXT})


;check for channel available and send to backup route
same => n(unchavail),NoOp(Dial status1: ${DIALSTATUS})
;same => n,Gotoif($[$["${DIALSTATUS}"="CHANUNAVAIL"]]?:chavail)
same => n,Gotoif($[$["${DIALSTATUS}"="CHANUNAVAIL"] | $["${DIALSTATUS}"="CONGESTION"]]?:chavail)

;same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=32)
same => n,Dial(Local/000${CALLNUM:3}@init-call,${RAND(140,160)});
;same => n,Dial(SIP/abdou/${CALLNUM}1)
;same => n,hangup()


;======================check for consecutive fail=======================
same => n(chavail),NoOp(Dialstatus: ${DIALSTATUS} check for consecutive fail ======)
same => n,GotoIf($[$["${DIALSTATUS}"="FAILED"] | $["${DIALSTATUS}"="CONGESTION"]]?:noFails)

same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(Query result ${myconn} update ports set calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port = ${EXT})

same => n,MYSQL(Query result ${myconn} select * from (select disposition from cdr where port=${EXT} order by calldate desc limit 5) as 5FAILS  where 5FAILS.disposition!="FAILED" AND 5FAILS.disposition!="CONGESTION")
same => n,MySQL(Fetch fetch ${result} failed)
same => n,GotoIf($[${fetch}=0]?:noFails)


same => n,Mysql(Query result ${myconn} update ports set datedisabled=NOW(), reason = "5 failed calls" where port=${EXT})
same => n,set(CDR(userfield)="5 FAILS CALLS")




;avois 2 conseutive same number when first call duration is more than zero
same => n(noFails),NoOp(do nothing)
same => n,MYSQL(Query result ${myconn} UPDATE tempblacklist SET `incr`=`incr` + 1 WHERE `number` =${CALLNUM})



;same => n,ExeceIF($["${DIALSTATUS}":"FAILED"]?Set(CDR_PROP(disable)=true))
same => n(suivant),GotoIf($[${CDR(billsec)}>59]?:chkblk)

same => n(whitelist),MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
same => n,MYSQL(Query result ${wtlconn} insert into whitelist(`number`,`cid`,`dateadded`) values(${CALLNUM},"${CALLERID(num)}",NOW()))

same => n,MYSQL(Query result ${wtlconn} insert into whitecid values("${CALLERID(num)}",NOW()))

same => n,Goto(cont)


;verifier si le callee doit aller ds la blacklist
same => n(chkblk),MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n(chkblk),MYSQL(Query result ${myconn} select count(calldate) > 6 and sum(billsec) < 30 from cdr where not (disposition="FAILED" or disposition="BUSY") and dst like "%${CALLNUM}")
same => n,MYSQL(Fetch fetch ${result} do_blacklist)
same => n,GotoIf($[${do_blacklist}=1]?blacklist)



; verifier si le caller doit aller ds la blakcid
same => n,MYSQL(Query result ${myconn} select count(calldate) > 6 and sum(billsec) < 30 from cdr where not (disposition="FAILED" or disposition="BUSY") and src like "%${CALLERID(num)}")
same => n,MYSQL(Fetch fetch ${result} do_blacklist)
same => n,GotoIf($[${do_blacklist}=1]?blacklist:cont);



;---------------------inserer le callee ds la blacklist et le caller ds la blackcid--------------------------------
same => n(blacklist),MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))


same => n(cont),gotoif($[${Dropped}=1]?hangup)
same => n,gotoif($[${dialok}=0]?end)

;check consecutives
;same => n,gotoif($[$[$["${DIALSTATUS}":"CANCEL"]|$["${DIALSTATUS}":"ANSWER"]|$["${DIALSTATUS}":"NOANSWER"]]&[${CurrentPort}>0]]?:hangup)
;same => n,MYSQL(Query result ${myconn} select check_autocall(${CurrentPort},${CONSMAX}))
;same => n,MYSQL(Fetch fetch ${result} OK)
;same => n,noop(OK = ${OK})
;same => n,gotoif($[${OK}=1]?hangup)
;same => n,Set(lim=${RAND(2,${CONSMAX})})
;same => n,MYSQL(Query result ${myconn} select get_autocall_num(${CurrentPort},${lim},${CALLNUM}))
;same => n,MYSQL(fetch fetch ${result} ac_number)
;same => n,noop(Selected number - ${ac_number})


;If not answered check for IVR
same => n(hangup),ExecIf($[$[!"${DIALSTATUS}":"ANSWER"]&$[${Dropped}=0]&$[${dialok}=1]]?Noop(Checking channel record for IVR))
same => n,NoOp(dial status: ${DIALSTATUS}, billsec: ${CDR((billsec)}, droped: ${Dropped}, dialok: ${dialok})
same => n,ExecIf($[$[$["${DIALSTATUS}"="BUSY"]|$[${CDR(billsec)}<7]]&$[$[${Dropped}=0]&$[${dialok}=1]]]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},${CALLNUM},${BLOCKTIME}))
;same => n,ExecIf($[${dialok}=1]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},${CALLNUM},${BLOCKTIME}))
;same => n,ExecIf($[${dialok}=1]?AGI(/var/lib/asterisk/agi-bin/chekwa.py))

;If not answered check for IVR






same => n,ExecIf($[$[!"${DIALSTATUS}":"ANSWER"]&$[${Dropped}=0]&$[${dialok}=1]]?Noop(IVR check status: ${IVR_STATUS} with dist ${IVR_DIST}))
same => n,gotoif($["${IVR_STATUS}":"Blocked"]?end)

same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,NOop("${DIALSTATUS}")
same => n,NOop(dialok=${dialok})
;same => n,GotoIf($[$[${dialok}=1]&$["${DIALSTATUS}"="NOANSWER"]]?:unbusy)
;same => n,GotoIf($[$[${dialok}=1]&$[["${DIALSTATUS}"="NOANSWER"]|$["${DIALSTATUS}"="CANCEL"]|$["${DIALSTATUS}"="BUSY"]]]?:unbusy)
;change intercall system here
;group 1 intercall 1 answered call and 3 non answered call

same => n,GotoIf($[$[${dialok}=1]&$["${DIALSTATUS}"="ANSWER"]]?:check_for_intercall)
same => n,MYSQL(Query result ${myconn} update intercall set answercall=${answercall}-1 where port = ${EXT});update answercall in database decrement aswercall


same => n(check_for_intercall),MYSQL(Query result ${myconn} select answercall<=0  from intercall where port = ${EXT});check for number of answer call
same => n,MYSQL(Fetch fetch ${result} makecall)
same => n,GotoIf($[${makecall}]?:check_for_intercall2)
same => n,set(answercallvar=$[${INTERCALL${EXT}}])
same => n,MYSQL(Query result ${myconn} update intercall set answercall=${answercallvar:0:1} where port = ${EXT}); update databse to make intercall by sucessfull numer of answer call
same => n,goto(end_check_for_intercall)

same => n(check_for_intercall2),MYSQL(Query result ${myconn} update intercall set faillcall=${faillcall}-1 where port = ${EXT});update failcall in database decrement aswercall
same => n,MYSQL(Query result ${myconn} select faillcall<=0  from intercall where port = ${EXT});check for faill calls
same => n,MYSQL(Fetch fetch ${result} makecall)
same => n,GotoIf($[${makecall}]]?:unbusy)
same => n,set(faillcallvar=$[${INTERCALL${EXT}}])
same => n,MYSQL(Query result ${myconn} update intercall set faillcall=${faillcallvar:1:1} where port = ${EXT}); update databse to make intercall by sucessfull numer of

same => n(end_check_for_intercall),NoOp(end check intercall)

same => n,set(CDR(userfield)="intercall")
same => n(Maj),MYSQL(Query result ${myconn} update ports set calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port = ${EXT})



same => n,NoOp(check for auto generate call)
same => n,NoOp( °°°°°°°°°°+++++++++000000000°°°°°°°°°+++++++++0000)
;group 2
;recherche du numero preferé
;same => n,MYSQL(Query result ${myconn} select prnumber.number from prnumber left join blocked on substr(blocked.number,4) = prnumber.number where blocked.number is null and prnumber.grp=2 order  by rand())

;change group for interecall make sure country and port number
;making group for intercall

same => n,gotoif($[$[${EXT}>=1] & $[${EXT}<=4]]?groupe1)
same => n,gotoif($[$[${EXT}>=5] & $[${EXT}<=8]]?groupe1)
same => n,gotoif($[$[${EXT}>=9] & $[${EXT}<=24]]?groupe2)
same => n,gotoif($[$[${EXT}>=25] & $[${EXT}<=32]]?groupe3)

same => n,gotoif($[$[${EXT}>=33] & $[${EXT}<=36]]?groupe4)







same => n,goto(groupeFin)
;recherche du numero preferé

same => n(groupe1),MYSQL(Query result ${myconn} select number from ports where port !=${EXT} and port >= 1 and port <= 8  and  number !="NULL"order by rand() LIMIT 1)
same => n,goto(groupeFin)

same => n(groupe2),MYSQL(Query result ${myconn} select number from ports where port !=${EXT} and port >= 9 and port <= 24 and  number !="NULL" order by rand() LIMIT 1)
same => n,goto(groupeFin)


same => n(groupe3),MYSQL(Query result ${myconn} select number from ports where port !=${EXT} and port >= 25and port <= 32 and  number !="NULL" order by rand() LIMIT !)
same => n,goto(groupeFin)




same => n(groupe4),MYSQL(Query result ${myconn} select number from ports where port !=${EXT} and port >= 33 and port <=36 and  number !="NULL" order by rand() LIMIT 1)

same => n(groupeFin),MYSQL(Fetch fetch ${result} AUTOCALLNUM)
same => n,NoOp(autocall = ${AUTOCALLNUM})
;same => n,GotoIf($[${fetch}=1]?:unbusy)
same => n,GotoIf($[${fetch}=1]?:unbusy)

same => n,NoOp(send new auto call)
same => n,set(CDR(userfield)="intercall")
same => n(Maj2),MYSQL(Query result ${myconn} update ports set calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port = ${EXT})





;start auto call after 20 call done
;same => n,MYSQL(Query result ${myconn} select count(*) from routes where port=${EXT})
;same => n,MYSQL(Fetch fetch ${result} APPEL)

;same => n,NoOp( le nbre result  ${result} et nbr appel ${APPEL} LE FECT ${fetch} ====++++++=====++++++)
;same => n,GotoIf($[${APPEL}>20]?:night)
;intercall setup
same => n(generateCall),NoOp(call generation)
;same => n,System(/root/new_call.sh ${EXT} ${AUTOCALLNUM} ${RAND(300,360)})
;put a long pause duration in the nigh and call simulation only in the dayt
;same => n(night),MYSQL(Query result ${myconn} select HOUR(NOW()))
;same => n,MYSQL(Fetch fetch ${result} NIGHT)
;same => n,NoOp(NIGHT =${NIGHT})
;same => n,GotoIf($[$[${NIGHT}>=22]|$[${NIGHT}<6]]?Maj3)
;same => n,set(NIGHT=6-${NIGHT})

same => n,System(/root/new_call.sh ${EXT} ${AUTOCALLNUM} ${RAND(60,240)})
same => n,MYSQL(Query result ${myconn} update ports set  calls_left=0, lastpause=DATE_ADD(NOW(), INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port=${EXT})
same => n,Goto(noBusy)
same => n(Maj3),NoOp()
same => n(Maj),MYSQL(Query result ${myconn} update ports set calls_left=0, lastpause = DATE_ADD(NOW(), INTERVAL ${RAND(${FIRSTPAUSEMIN},${FIRSTPAUSEMAX})} SECOND) where port = ${EXT})
same => n(noBusy),MYSQL(Query result ${myconn} update ports set busy = 0 where port=${EXT})



same => n,Goto(end)

same => n(unbusy),ExecIf($[${dialok}=1]?MYSQL(Query result ${myconn} update ports set busy = 0 where port=${EXT}))

same => n(end),MYSQL(Disconnect ${myconn})
same => n,NOop("${DIALSTATUS}")
same => n,NOop(dialok=${dialok})
same => n,ExecIf($[$[${dialok}=1]&$["${DIALSTATUS}"="BUSY"]]?Hangup(18):goto(continue))
same => n,Goto(fini)
same => n(continue),ExecIf($[$[${dialok}=1]&$["${DIALSTATUS}"="NOANSWER"]]?Hangup(19):goto(continue2))
same => n,Goto(fini)
same => n(continue2),ExecIf($[$[${dialok}=1]&$["${DIALSTATUS}"="CONGESTION"]]?Hangup():goto(continue3))
same => n,Goto(fini)

same => n(continue3),ExecIf($[$[${dialok}=1]&$[!"${DIALSTATUS}":"ANSWER"]]?Hangup())
same => n(fini),NoOp(nothing to do)







[autocall]
exten => _XXX.,1,NOOP(${EXTEN})
same => n,Set(CHECKIVR=1)
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(Query result ${myconn} update ports set busy = 1 where port=${EXTEN:0:3})
same => n,Set(CDR(port)=${EXTEN:0:3})
same => n,Set(EXT=${EXTEN:0:3})
same => n,set(CDR(userfield)="Autocall")
;IVR part===========================================================================================================================



;same => n,MYSQL(Query result ${myconn} select count(calldate) from cdr  where disposition like "ANSWERED%" and calldate like "2020-02-28%" and port =${EXTEN:0:3})
;same => n,MYSQL(Fetch fetch ${result} count)

;same => n,MYSQL(Query result ${myconn} select sum(billsec) from cdr  where disposition like "ANSWERED%" and calldate like "2020-02-28%" and port =${EXTEN:0:3})
;same => n,MYSQL(Fetch fetch ${result} sum)



;same => n,MYSQL(Query result ${myconn} select ${sum} DIV ${count})
;same => n,MYSQL(Fetch fetch ${result} acdtoday)



;same => n,set(acdperso=${acdtoday})
;same => n,NoOp(acd = ${acdperso})

;same => n,MYSQL(Query result ${myconn} select (${count} * 180 + 180 - ${sum})*1000)
;same => n,MYSQL(Fetch fetch ${result} dureeappel)

;same => n,NoOp(dureeappel = ${dureeappel})

;same => n,gotoif($[${acdperso}<180000]?:compensation)


;intercall duration
same => n,Dial(Local/${EXTEN}@echotest,,L(${RAND(80000,120000)}))
same => n,Hangup()


;same => n(compensation),Dial(Local/${EXTEN}@echotest,,L(${dureeappel}))
;same => n,Hangup()


exten => _9XXX,1,NoOp(Call back to port ${EXTEN:1})
same => n,Set(CHECKIVR=0)
same => n,Dial(SIP/asterisk/678150555)
same => n,Hangup()

exten => _88XXXXX.,1,Noop(Call back to port ${EXTEN:0:3})
same => n,Set(CHECKIVR=0)
same => n,Set(EXT=${EXTEN:2:3})
same => n,Set(CDR(port)=${EXT})
same => n,Set(CDR(userfield)="Autocallback to port ${EXTEN:2:3}")
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(Query result ${myconn} update ports set busy =1 where port=${EXTEN:2:3})
same => n,Dial(Local/${EXTEN:2}@init-call)
same => n,ExecIf($[${CHECKIVR}=1]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},237${EXTEN:3},${BLOCKTIME}))
same => n,Hangup()

exten => h,1,MYSQL(Query result ${myconn} update ports set busy =0 where port=${EXT})
same => n,MYSQL(Clear ${result})
same => n,MYSQL(Disconnect ${myconn})
same => n,ExecIf($[${CHECKIVR}=1]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},237${EXTEN:3},${BLOCKTIME}))

;same => n,MYSQL(Disconnect ${myconn})
;same => n,ExecIf($[${CHECKIVR}=1]?AGI(/var/lib/asterisk/agi-bin/check_ivr.py,${EXT},237${EXTEN:3},${BLOCKTIME}))

[echotest]
exten => _X.,1,NOOP(Echotest)
same => n,Set(CDR_PROP(disable)=true)
same => n,Playback(demo-echotest)
same => n,Playback(demo-echotest)
same => n,Playback(demo-echotest)
same => n,Echo
same => n,Playback(demo-echodone)
same => n,Hangup()


[verification]

exten => _X.,1,NoOp(Verification call: ${EXTEN})
same => n,Set(CALLNUM=${EXTEN})
same => n,MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(connect wtlconn ${WTLHOST} ${WTLNAME} ${WTLPASS} ${WTLNAME})
same => n,GotoIf($["${wtlconn}" = ""]?dberror)

same => n,MYSQL(Query result ${myconn} UPDATE tempblacklist SET `incr`=`incr` + 1,`dateadded`=NOW() WHERE `number` =${CALLNUM})
same => n,MYSQL(Query result ${myconn} insert into tempblacklist values(${CALLNUM},1,NOW()))



same => n,set(sign=${CALLERID(num)})
same => n,set(sign=${sign:0:1})
same => n,gotoif($["${sign}"="+"]?:requete4)

;verifie si le caller et callee est dans la whitelist

same => n,MYSQL(Query result ${wtlconn} select number from whitelist where number=${CALLNUM} limit 1)
same => n,goto(resultat4)
same => n(requete4),MYSQL(Query result ${wtlconn} select number from whitelist where number=${CALLNUM} limit 1)
same => n(resultat4),MYSQL(Fetch fetch ${result} number)
same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))
;same => n,Hangup()

;verifie si le caller et callee est dans la whitelist
;same => n(PlusCaller),MYSQL(Query result ${wtlconn} select number from whitelist where number = ${CALLNUM} and cid = "+${CALLERID(num)}")
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,ExecIf($[${fetch}=1]?GoTo(incoming,${EXTEN},1):GoTo(chkblacklist))
;same => n,Hangup()

;vefifie si le callee est ds la black list
same => n(chkblacklist),MYSQL(Query result ${wtlconn} select number from blacklist where number=${CALLNUM} limit 1)
same => n,MYSQL(Fetch fetch ${result} number)
same => n,gotoif($[${fetch}=1]?blacklisted)


;verifie si le caller est dans la blackcid
same => n,gotoif($["${sign}"="+"]?:requete5)
same => n,MYSQL(Query result ${wtlconn} select cid from blackcid where cid="${CALLERID(num):1}" or cid="${CALLERID(num)}" limit 1)
same => n,goto(resultat5)
same => n(requete5),MYSQL(Query result ${wtlconn} select cid from blackcid where cid="${CALLERID(num)}" or cid="+${CALLERID(num)}" limit 1)
same => n(resultat5),MYSQL(Fetch fetch ${result} cid)
same => n,gotoif($[${fetch}=1]?blackcid)



;verifie si le caller est dans la blackcid
;same => n,MYSQL(Query result ${wtlconn} select cid from blackcid where cid = "+${CALLERID(num)}")
;same => n,MYSQL(Fetch fetch ${result} cid)
;same => n,gotoif($[${fetch}=1]?blackcid)


;verifie si le caller est dans la whitecid
same => n,gotoif($["${sign}"="+"]?:requete6)
same => n,MYSQL(Query result ${wtlconn} select cid from whitecid where  cid ="${CALLERID(num):1}" or cid ="${CALLERID(num)}" limit 1)
same => n,goto(resultat6)
same => n(requete6),MYSQL(Query result ${wtlconn} select cid from whitecid where  cid ="${CALLERID(num)}" or cid ="+${CALLERID(num)}" limit 1)
same => n(resultat6),MYSQL(Fetch fetch ${result} cid)
same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))
;same => n,Hangup()

;verifie si le caller est dans la whitecid
;same => n(PlusCallerCaller),MYSQL(Query result ${wtlconn} select cid from whitecid where  cid = "+${CALLERID(num)}")
;same => n,MYSQL(Fetch fetch ${result} cid)
;same => n,ExecIf($[${fetch}=1]?GoTo(incoming,${EXTEN},1):GoTo(tempwhitelist))
;same => n,Hangup()

;verifie si le callee est dans la tempwhitelist
same => n(tempwhitelist),MYSQL(Connect myconn ${DBHOST} ${DBUSER} ${DBPASS} ${DBNAME})
same => n,MYSQL(Query result ${myconn} select number from tempwhitelist where  number=${CALLNUM})
same => n,MYSQL(Fetch fetch ${result} number)
same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))
;same => n,Hangup()


;verifie si le caller est dans la whitelist, ne pas confondre avec la whitecid
same => n,gotoif($["${sign}"="+"]?:requete7)
same => n,MYSQL(Query result ${wtlconn} select number from whitelist where cid ="${CALLERID(num):1}" or cid ="${CALLERID(num)}" limit 1)
same => n,goto(resultat7)
same => n(requete7),MYSQL(Query result ${wtlconn} select number from whitelist where cid ="${CALLERID(num)}" or cid ="+${CALLERID(num)}" limit 1)
same => n(resultat7),MYSQL(Fetch fetch ${result} number)
same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))
;same => n,Hangup()

;verifie si le caller est dans la whitelist, ne pas confondre avec la whitecid
;same => n(chk_caller_wl2),MYSQL(Query result ${wtlconn} select number from whitelist where cid = "+${CALLERID(num)}")
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,ExecIf($[${fetch}=1]?GoTo(incoming,${EXTEN},1):GoTo(chk_caller_wl3)
;same => n,Hangup()

;verifie si le caller est dans la whitelist, enlever + aveant de verifier , ne pas confondre avec la whitecid
;same => n(chk_caller_wl3),set(calleridplus=${CALLERID(num)})
;same => n,set(calleridplus=${calleridplus:1})
;same => n,MYSQL(Query result ${wtlconn} select number from whitelist where cid ="${calleridplus}")
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))
;same => n,Hangup()


;verifie si le callee est dans le prnumber
same => n(prnumber),NoOp(prefered number ============= prnumber number ============= prnumber =====)
same => n,Set(numero=${CALLNUM:3})
same => n,MYSQL(Query result ${myconn} select number from prnumber where  number=${numero})
same => n,MYSQL(Fetch fetch ${result} number)
same => n,ExecIf($[${fetch}=1]?GoTo(retail,${EXTEN},1))




;verifie si le caller vient de la rca
;same => n(chk_caller_wl4),set(calleridrca="${CALLERID(num)}")
;same => n,set(calleridrca=${calleridrca:0:4})
;same => n,set(calleridrca2="${CALLERID(num)}")
;same => n,set(calleridrca2=${calleridrca2:0:5})
;same => n,Noop(le caller rca est ${calleridrca})
;same => n,ExecIf($[${calleridrca}=236]?GoTo(incoming,${EXTEN},1))
;same => n(suivant),ExecIf($[${calleridrca2}='+236']?GoTo(retail,${EXTEN},1))
;same => n,Hangup()



;same => n,MYSQL(Query result ${wtlconn} select number from whitelist where number = ${CALLNUM} and cid = "${CALLERID(num)}")
;same => n,MYSQL(Fetch fetch ${result} number)
;same => n,ExecIf($[${fetch}=1]?GoTo(incoming,${EXTEN},1):GoTo(dial))
;same => n,Hangup()

same => n(dial),set(duree= ${RAND(68000,73000)})
same  => n,NoOp(la duree aeatoire est ${duree})
same => n,Hangup(42)
;same => n,Dial(SIP/sbrfilter/${EXTEN},100,L(${duree}))
;same => n,Hangup(42)
; verifie si le callee doit aller das la blacklist

same => n,NoOp(dst =${EXTEN})
same => n,MYSQL(Query result ${myconn} select count(calldate) > 9 and sum(billsec) < 30 from cdr where not (disposition = "FAILED" or disposition = "BUSY") and dst like "%${EXTEN}")
same => n,MYSQL(Fetch fetch ${result} do_blacklist)
same => n,GotoIf($[${do_blacklist}=1]?blacklist);


; verifier si le caller doit aller ds la blakcid
same => n,MYSQL(Query result ${myconn} select count(calldate) > 9 and sum(billsec) < 30 from cdr where not (disposition = "FAILED" or disposition = "BUSY") and src like "%${CALLERID(num)}")
same => n,MYSQL(Fetch fetch ${result} do_blacklist)
same => n,GotoIf($[${do_blacklist}=1]?blacklist)


same => n,Hangup(42)


same => n(tempblacklisted),noop(~~~~~~~DROPPED-BY-TEMP-BLACKLISTED~~~~~~~~)
same => n,Set(CDR(userfield)="temp blacklisted")
;same => n,Dial(SIP/tsoben/${EXTEN})

same => n,MYSQL(Query result ${myconn} select number from tempblacklist where number=${CALLNUM} and incr>10)
same => n,MYSQL(Fetch fetch ${result} number)
same => n,gotoif($[${fetch}=1]?blacklisted)

same => n,Set(Dropped=1)
same => n,hangup(42)

same => n(blacklisted),noop(~~~~~~~DROPPED-BY-BLACKLISTED~~~~~~~~)
same => n,Set(CDR(userfield)="blacklist")
same => n,Set(Dropped=1)
same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,Hangup(42)


same => n(blackcid),noop(~~~~~~~DROPPED-BY-BLACK-CID~~~~~~~~)
same => n,Set(CDR(userfield)="blackcid")
same => n(blacklist),MYSQL(Query result ${wtlconn} insert into blacklist values(${CALLNUM},NOW()))
same => n,MYSQL(Query result ${wtlconn} insert into blackcid values("${CALLERID(num)}",NOW()))
same => n(hangup),Hangup()



[init-call]
exten => _X.,1,Noop(${EXTEN})
same => n,Set(CDR_PROP(disable)=true)
same => n,Set(EXT=${EXTEN:0:3})
same => n,MixMonitor(,t(${EXT}.wav))
;same => n,Dial(SIP/goip135/${EXTEN:3})
same => n,gotoif($[${EXT}=0]?zero)
same => n,gotoif($[${EXT}=1]?one)
same => n,gotoif($[${EXT}=2]?two)
same => n,gotoif($[${EXT}=3]?three)
same => n,gotoif($[${EXT}=4]?four)
same => n,gotoif($[${EXT}=5]?five)
same => n,gotoif($[${EXT}=6]?six)
same => n,gotoif($[${EXT}=7]?seven)
same => n,gotoif($[${EXT}=8]?eight)
same => n,gotoif($[${EXT}=9]?nine)
same => n,gotoif($[${EXT}=10]?ten)
same => n,gotoif($[${EXT}=11]?eleven)
same => n,gotoif($[${EXT}=12]?twelve)
same => n,gotoif($[${EXT}=13]?thirteen)
same => n,gotoif($[${EXT}=14]?fourteen)

same => n,gotoif($[${EXT}=15]?fiveteen)
same => n,gotoif($[${EXT}=16]?sixteen)
same => n,gotoif($[${EXT}=17]?seventeen)
same => n,gotoif($[${EXT}=18]?eighteen)
same => n,gotoif($[${EXT}=19]?nineteen)
same => n,gotoif($[${EXT}=20]?twenty)
same => n,gotoif($[${EXT}=21]?twentyone)
same => n,gotoif($[${EXT}=22]?twentytwo)
same => n,gotoif($[${EXT}=23]?twentythree)
same => n,gotoif($[${EXT}=24]?twentyfour)
same => n,gotoif($[${EXT}=25]?twentyfive)
same => n,gotoif($[${EXT}=26]?twentysix)

same => n,gotoif($[${EXT}=27]?twentyseven)
same => n,gotoif($[${EXT}=28]?vingtHuit)
same => n,gotoif($[${EXT}=29]?vingtNeuf)
same => n,gotoif($[${EXT}=30]?trente)

same => n,gotoif($[${EXT}=31]?trenteUn)
same => n,gotoif($[${EXT}=32]?trenteDeux)
same => n,gotoif($[${EXT}=33]?thirrty three)

same => n(one),Dial(SIP/goip135/${EXTEN})
same => n,goto(GW_end)

same => n(two),Dial(SIP/goip135/${EXTEN})
same => n,goto(GW_end)


same => n(three),Dial(SIP/goip135/${EXTEN})
same => n,goto(GW_end)

same => n(four),Dial(SIP/goip135/${EXTEN})
same => n,goto(GW_end)

same => n(five),Dial(SIP/goip136/${EXTEN})
same => n,goto(GW_end)


same => n(six),Dial(SIP/goip136/${EXTEN})
same => n,goto(GW_end)


same => n(seven),Dial(SIP/goip136/${EXTEN})
same => n,goto(GW_end)

same => n(eight),Dial(SIP/goip136/${EXTEN})
same => n,goto(GW_end)

same => n(nine),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(ten),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(eleven),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twelve),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(thirteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(fourteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(fiveteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(sixteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(seventeen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)


same => n(eighteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(ninteen),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)


same => n(twenty),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twentyone),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twentytwo),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twentythree),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twentyfour),Dial(SIP/goip137/${EXTEN})
same => n,goto(GW_end)

same => n(twentyfive),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(twentysix),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(twentyseven),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(twentyeight),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(dixSept),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(dixSept),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(dixSept),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)

same => n(dixSept),Dial(SIP/goip138/${EXTEN})
same => n,goto(GW_end)


same => n(dixSept),Dial(SIP/goip139/${EXTEN})
same => n,goto(GW_end)
same => n(dixHuit),Dial(SIP/goip139/${EXTEN})
same => n,goto(GW_end)


same => n(dixNeuf),Dial(SIP/goip19/${EXTEN})
same => n,goto(GW_end)
same => n(vingt),Dial(SIP/goip20/${EXTEN})
same => n,goto(GW_end)


same => n(vingtUn),Dial(SIP/goip21/${EXTEN})
same => n,goto(GW_end)
same => n(vingtDeux),Dial(SIP/goip22/${EXTEN})
same => n,goto(GW_end)
same => n(vingtTrois),Dial(SIP/goip23/${EXTEN})
same => n,goto(GW_end)
same => n(vingtQuatre),Dial(SIP/goip24/${EXTEN})
same => n,goto(GW_end)
same => n(vingtCinq),Dial(SIP/goip25/${EXTEN})
same => n,goto(GW_end)
same => n(vingtSix),Dial(SIP/goip26/${EXTEN})
same => n,goto(GW_end)


same => n(vingtSept),Dial(SIP/goip27/${EXTEN})
same => n,goto(GW_end)

same => n(vingtHuit),Dial(SIP/goip28/${EXTEN})
same => n,goto(GW_end)



same => n(vingtNeuf),Dial(SIP/goip29/${EXTEN})
same => n,goto(GW_end)

same => n(trente),Dial(SIP/goip30/${EXTEN})
same => n,goto(GW_end)

same => n(trenteUn),Dial(SIP/goip31/${EXTEN})
same => n,goto(GW_end)

same => n(trenteDeux),Dial(SIP/goip32/${EXTEN})
same => n,goto(GW_end)

same => n(GW2),Dial(SIP/toNkake/237${EXTEN:3})
same => n(GW_end),NoOp()

exten => h,1,StopMixMonitor()
same => n,Wait(4)

[block]
exten => _.,1,Hangup()



