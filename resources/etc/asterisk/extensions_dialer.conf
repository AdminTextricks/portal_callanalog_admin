[call-routing-test]
exten => _X.,1,NoOp(<<===Call Starts Here===>)
exten => _X.,n,NoOp(<<===IVR DEVELOPED BY Sanjeet Sangwan ===>>)
;Set mysql user password
same => n,Set(__mysql_user=root)
same => n,Set(__mysql_pwd=tumko34h1se)
same => n,Set(__mysql_db=worxdialer)
same => n,Set(__host=localhost)
;Check is direct or dtmf
same => n,MYSQL(Connect connid ${host} ${mysql_user} ${mysql_pwd} ${mysql_db})
same => n,mysql(Query resultid ${connid} select account_id,routing,tone_type from account_did where `did`='${CALLERID(dnid)}' and `active`='1')
same => n,MYSQL(Fetch fetchid ${resultid} account_id routing tone_type)
same => n,MYSQL(clear ${resultid})
same => n,set(__ACCOUNT_ID=${account_id})
same => n,set(__ROUTING=${routing})
same => n,set(__TONETYPE=${tone_type})
same => n,GotoIf($["${ACCOUNT_ID}" = ""]?callend:start)
same => n(callend),Hangup(<<===========callend==========>>)
same => n(start),NoOp(<<============ACCOUNT ID = ${ACCOUNT_ID}=============>>)
same => n,NoOp(<<============ROUTING = ${routing}=============>>)
same => n,set(__FROM=${CDR(clid)})
same => n,set(__DID=${CDR(dst)})
same => n,set(__START=${CDR(start)})
same => n,set(__UNIQUE_ID=${CDR(uniqueid)})
same => n,GotoIf($["${routing}" = "direct"]?direct_routing:dtmf_routing)
same => n(direct_routing),Goto(direct_routing,${CALLERID(dnid)},1)
same => n(dtmf_routing),Goto(dtmf_routing,s,1)
same => n,Hangup(<<===========No route hangup==========>>)
[direct_routing]
exten => _X.,1,NoOp(<<=============Start direct routing===============>>)
same => n,MYSQL(Query resultid ${connid} INSERT INTO `call_info` (`account_id`,`from`,`did`,`start`,`uniqueid`) VALUES (${ACCOUNT_ID},'${FROM}','${DID}','${START}','${UNIQUE_ID}'))
same => n,MYSQL(Query resultid ${connid} INSERT INTO `cust_sms` (`account_id`,`from`,`unique_id`,`call_status`,`DID`,`ANS_TIME`) VALUES (${ACCOUNT_ID},'${FROM}','${UNIQUEID}',0,'${DID}','${START}'))
same => n,MYSQL(clear ${resultid})
same => n,Answer()
same => n,Set(__TONEFILE=${IF($[ ${TONETYPE} = file]?/var/www/html/tone/tone_${DID}:/var/www/html/new_welcome)})
same => n,Playback(${TONEFILE});
same => n,GOTO(dr_ivr,start,1)
same => n,Hangup(<<===========Direct routing hangup==========>>)
same => n,MYSQL(Connect connid deetya abc **** ivr)
same => n,MYSQL(Query resultid ${connid} UPDATE call_info SET `end`="${END}" where `uniqueid`='${UNIQUE_ID}')
same => n,MYSQL(clear ${resultid})
;endcall
exten => h,1,Goto(dr_ivr_endcall,h,1)

[dr_ivr]
exten => start,1,noop(######START######)
same => n,MYSQL(Query resultid ${connid} SELECT count(*),number,call_info.user_id FROM `call_info` JOIN users ON users.id=call_info.user_id JOIN direct_routing_flow ON call_info.user_id = direct_routing_flow.user_id WHERE call_info.`account_id` =${ACCOUNT_ID} AND `from` = ${FROM} AND users.active=1 order by call_info.id desc limit 1)
same => n,MYSQL(Fetch fetchid ${resultid} count number user_id)
same => n,MYSQL(clear ${resultid})
same => n,GotoIf($[${count} < 1]?startroundrobin)
same => n,set(__NUMBER=${number})
same => n,set(__USER_ID=${user_id})
same => n,MYSQL(Query resultid ${connid} UPDATE call_info SET user_id='${USER_ID}',`to`='${NUMBER}' where `uniqueid`='${UNIQUE_ID}')
same => n,MYSQL(Query resultid ${connid} UPDATE cust_sms SET `to` = '${NUMBER}' WHERE `UNIQUE_ID`='${UNIQUE_ID}');;;;;D;;;;
same => n,NooP(##########################---------Current Number is --[${NUMBER}]-----${UNIQUE_ID}------------------###############)
same => n,Set(CALLERID(all)=120${DID})
same => n,dial(DAHDI/g0/0${NUMBER},20,mM(ANSWEREDED))
;Check Round Robin executive number
same => n(startroundrobin),set(counter=1)
same => n,MYSQL(Query resultid ${connid} select count(*) from direct_routing_flow as drf join users ON users.id = drf.user_id where drf.did='${DID}' and users.active = 1 and drf.account_id =${ACCOUNT_ID})
same => n,MYSQL(Fetch fetchid ${resultid} count)
same => n,MYSQL(clear ${resultid})
same => n,set(__COUNT=${count})
same => n,MYSQL(Query resultid ${connid} select last from direct_routing_flow as drf join users ON users.id = drf.user_id where drf.did='${DID}' and users.active = 1 order by last desc)
same => n,MYSQL(Fetch fetchid ${resultid} last)
same => n,MYSQL(clear ${resultid})
same => n,set(__LAST_RANK=${last})
same => n,Set(i=${IF($[${LAST_RANK} >= ${COUNT}]?1:$[${LAST_RANK} + 1])})
same => n,While($[${i} <= ${COUNT}])
same => n,MYSQL(Query resultid ${connid} SELECT number,user_id FROM (SELECT direct_routing_flow.*,@i := @i + 1 as rank FROM `direct_routing_flow` JOIN users ON users.id = direct_routing_flow.user_id JOIN (select @i := 0 )  temp WHERE direct_routing_flow.did='${DID}' and users.active='1' and direct_routing_flow.`account_id` =${ACCOUNT_ID} ORDER BY priority asc) temp1 where rank=${i});;;DDDDDD
same => n,MYSQL(Fetch fetchid ${resultid} number user_id)
same => n,MYSQL(clear ${resultid})
same => n,set(__NUMBER=${number})
same => n,set(__USER_ID=${user_id})
;Update last dial 
same => n,MYSQL(Query resultid ${connid} UPDATE direct_routing_flow SET last='1' where `did`='${DID}')
same => n,MYSQL(Query resultid ${connid} UPDATE direct_routing_flow SET last='${i}' where `did`='${DID}' and `user_id`='${USER_ID}')
same => n,MYSQL(Query resultid ${connid} UPDATE call_info SET user_id='${USER_ID}',`to`='${NUMBER}' where `uniqueid`='${UNIQUE_ID}')
same => n,MYSQL(Query resultid ${connid} UPDATE cust_sms SET `to` = '${NUMBER}' WHERE `UNIQUE_ID`='${UNIQUE_ID}');;;;;D;;;;
same => n,NooP(##########################---------Current Number is --[${NUMBER}]-----${UNIQUE_ID}------------------###############)
same => n,Set(CALLERID(all)=120${DID})
same => n,dial(DAHDI/g0/0${NUMBER},20,mM(ANSWEREDED))
same => n,NooP(<<=================DISPOSIOTION -- ${CDR(disposition)} ===================>)
same => n,Set(i=$[${i} + 1])
same => n,EndWhile()
;endcall
exten => h,1,Goto(dr_ivr_endcall,h,1)      
[macro-ANSWEREDED]
exten => s,1,noop(CALL_ANSWERED ==============${UNIQUE_ID}==================)
exten => s,n,set(__DISPOSITION=${CDR(disposition)})
exten => s,n,set(__ANSWER=${CDR(answer)})
exten => s,n,set(__DISPOSITION=${CDR(disposition)})
exten => s,n,MYSQL(Connect connid localhost ${mysql_user} ${mysql_pwd} ${mysql_db})
exten => s,n,MYSQL(Query resultid ${connid} UPDATE call_info SET `user_id`='${USER_ID}',`to`='${NUMBER}', `answer`='${ANSWER}',`disposition`='${DISPOSITION}' where `uniqueid`='${UNIQUE_ID}')
exten => s,n,MYSQL(Query resultid ${connid} UPDATE cust_sms SET `to` = '${NUMBER}', `ANS_TIME`='${ANSWER}',`call_status`='${DISPOSITION}' WHERE `UNIQUE_ID`='${UNIQUE_ID}');;;;;D;;;;
exten => s,n,MYSQL(clear ${resultid})
exten => s,n,Mixmonitor(/var/www/html/recordings/answered/${DID}_${FROM}_${ANSWER}.wav)

[dr_ivr_endcall]
exten => h,1,noop(###### END CALL ######)
exten => h,n,set(__END=${CDR(end)})
exten => h,n,set(__DURATION=${CDR(duration)})
exten => h,n,set(__BILLSEC=${CDR(billsec)})
exten => h,n,Set(ETIME=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
exten => h,n,MYSQL(Query resultid ${connid} UPDATE call_info SET `end`='${ETIME}',`billsec`='${BILLSEC}',`duration`='${DURATION}' where `uniqueid`='${UNIQUE_ID}')
exten => h,n,MYSQL(Query resultid ${connid} UPDATE cust_sms SET `STATUS`='1' WHERE `UNIQUE_ID`='${UNIQUE_ID}');;;;;D;;;;
exten => h,n,AGI(sms.php)
exten => h,n,hangup()























[explain]
exten => s,1,background(audio file you wish to play first)
exten => s,2,waitexten(5)
exten => 1,1,goto(Menu1,s,1)
exten => 2,1,goto(Menu2,s,1)
;exten => 7,1,dial(sip/333#88575641@out,60)
exten => _X,1,goto(operator,s,1)
exten => h,1,noop(${HANGUPCAUSE})
exten => s,1,noop(${CALLERID(num)})
[operator]
;exten => s,1,dial(sip/2015@ccm,60)
exten => s,n,queue(sales,twh)
exten => s,n,voicemail(1000@default)
exten => s,n,hangup





[worxpbbx-outcall]
exten => _19177225031,1,Goto(DID-TFN,${EXTEN},1)
exten => _19177225032,1,Goto(DID-TFN,${EXTEN},1)
exten => _00X.,1,Verbose(1,--- Dialing out from Trunk A)
same=> n,Noop(catching the caller Server IP is  ${CHANNEL(recvip)})
same=> n,Noop(catching the caller id is ${CALLERID(num)})
same=> n,Verbose(1,***** catching the caller dialing number is ${EXTEN} *******)
same=> n,Set(GROUP()=Cellular)
same=> n,Verbose(1,**** Number of concurrent calls are ${GROUP_COUNT(Cellular)})
same=> n,Set(CDR(userfield)=${CHANNEL(recvip)})
same=> n,GotoIf($[${GROUP_COUNT(Cellular)} > 31]?999:limit)
same=> n(limit),Goto(Cellular,${EXTEN:2},1)
same=> 999,Verbose(1,***Number of concurrent calls are ${GROUP_COUNT(Cellular)}  over limit)
same=> n,playback(all-circuits-busy-now)
same=> n,Set(DIALSTATUS=CHANUNAVAIL)
same=> n,playback(goodbye)
same=> n,Hangup

exten => _X.,1,Verbose(2,--- Dialing Extension to Extension Calls)
same=> n,Goto(extensions-to-extensions,${EXTEN},1

[chain-spy]
exten => s,1,Answer()
exten => s,n,ChanIsAvail(SIP/${chan})
exten => s,n,NoOp(AVAILCHAN :: ${AVAILCHAN} :: AVAILORIGCHAN :: ${AVAILORIGCHAN} :: AVAILSTATUS :: ${AVAILSTATUS})
exten => s,n,Chanspy(SIP/${chan})
exten => s,n,HangUp()
exten => s,n(notvalid),PlayBack(all-circuits-busy-now)
exten => s,n,HangUp()



[extensions-to-extensions]
exten => _X.,1,Progress()
exten => _X.,n,Set(CDR(dest_name)=inbound)
exten => _X.,n,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,Set(CALLERID(num)=${global_clin})
exten => _X.,n,Set(iduser=${GENERIC_WORX(SELECT `id_cc_card` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(__destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(CALLERID(num)=${CALLERID(num)}-for-${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(call_type)=1)
exten => _X.,n,Set(dial_out=${GENERIC_WORX(SELECT `dial_timeout` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,Set(dialnum=${extension})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,bi(mixmvar))
exten => _X.,n,Set(mydid=${CALLERID(dnid)})
exten => _X.,n,Set(CDR(DID)=${CALLERID(dnid)})
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Dial(SIP/${EXTEN},${dial_out},U(ext_ans,${UNIQUEID}^${extension}))
exten => _X.,n,StopMixMonitor(${mixmvar})
exten => _X.,n,NoOp(Dial Status:: ${DIALSTATUS})
exten => _X.,n,Goto(s-${DIALSTATUS},1)
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${mydid},${global_clin},${destination},${callstatus},2,${dialnum},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${mydid},${global_clin},${destination},${callstatus},2,${dialnum},${CHANNEL})})
exten => live_call,n,Return
exten => s-NOANSWER,1,Goto(finish_extension,1)
;exten => s-NOANSWER,1,Goto(extvmmain,${result1},1)
exten => s-BUSY,1,Goto(finish_extension,1)
;exten => s-BUSY,1,Goto(extvmmain,${result1},1)
exten => s-ANSWER,1,Goto(finish_extension,1)
exten => s-CONGESTION,1,Goto(finish_extension,1)
exten => s-CANCEL,1,Hangup
exten => s-CHANUNAVAIL,1,Goto(finish_extension,1)
;exten => s-CHANUNAVAIL,1,Goto(extvmmain,${result1},1)
exten => finish_extension,1,Hangup
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()

[ext_ans]
exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
exten => s,n,Set(cut_agent=${ARG2})
exten => s,n,Set(agent_name=)
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Inbound(connected),${lc_id},3)
exten => s,n,Return()



[DID-TFN]
exten => _X.,1,goto(DID-CALLING,${EXTEN},1)
exten => _+X.,1,goto(DID-TWILIO,${EXTEN},1)


[Cellular]
exten => _X.,1,Progress
exten => _X.,n,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,Set(HANGUP_OWNER=Caller)  ; we hung up
exten => _X.,n,ExecIf($[${EXTEN:0:3} = 261]?goto(exit))
exten => _X.,n,Set(iduser=${GENERIC_WORX(SELECT `id_cc_card` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(dial_out=${GENERIC_WORX(SELECT `dial_timeout` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=OutBOND)
exten => _X.,n,Set(dialnum=${EXTEN})
exten => _X.,n,Set(CALLERID(num)=${out_cli})
exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,Mixmonitor(${UNIQUEID}.wav,b)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,AGI(iglobal.php,1)
exten => _X.,n,Set(HANGUP_OWNER=Callee)  ; they hung up
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${out_cli},${destination},${callstatus},2,${extension},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${dialnum},${destination},${callstatus},2,${extension},${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp(Hangup cause is ${HANGUPCAUSE})
exten => h,n,NoOp(Call Duration is ${CDR(duration)})






[DID-CALLING]
exten => _X.,1,NoOp((NOTICE, Call Group All did-selection context)...................../r/n)
same=>n,Set(i=1)
same=>n,AGI(pathfinder.php,${did},${EXTEN},didtype)
same=>n,NoOp((NOTICE, CONTINUE : ${continue})...................../r/n)
same=>n,GotoIf($["${continue}" = "1"]?call-queue)
same=>n,GotoIf($["${continue}" = "2"]?va-Celular)
same=>n,GotoIf($["${continue}" = "9"]?call-reject)
same=>n,Set(i=$[${i}+1])
same=>n,EndWhile
same=>n(call-queue),Goto(main-menu,${EXTEN},1)
same=>n,Hangup()
same=>n(va-Celular),Goto(main-menu,${EXTEN},1)
same=>n,Hangup()
same=>n(call-reject),Goto(call-reject,${EXTEN},1)
same=>n,Hangup()

[call-reject]
exten => _X.,1,NoOp((NOTICE, Call Group All in Ring-Group context)...................../r/n)
same=> n,Hangup()



[main-menu]
exten => _X.,1,NoOp((NOTICE, GO TO CALL QUEUE)...................../r/n)
exten => _X.,n,Set(CDR(call_type)=1)
exten => _X.,n,Verbose(SIPHEADER ${SIP_HEADER(TO)})
exten => _X.,n,Verbose(SIPHEADER ${SIP_HEADER(FROM)})
exten => _X.,n,Verbose( X extensions)
exten => _X.,n,Set(CDR(did)=${CALLERID(dnid)})
exten => _X.,n,Set(__global_did=${CALLERID(dnid)})
exten => _X.,n,Set(CONNECTEDLINE(num,i)=${global_did})
exten => _X.,n,Set(__global_clin=${CALLERID(num)})
exten => _X.,n,Set(callerblacklist=${GENERIC_WORX(select id from cc_blacklist where caller_id=${CALLERID(num):-10})})
exten => _X.,n,GoToIf($["${callerblacklist}" != ""]?finish)
exten => _X.,n(checkdnid),GotoIf($["${CALLERID(dnid)})}" = ""]?setdnid:start)
exten => _X.,n(setdnid),Set(CALLERID(dnid)=${EXTEN})
exten => _X.,n(start),Set(__iduser=${GENERIC_WORX(select iduser from cc_did where did=${CALLERID(dnid)})})
exten => _X.,n,Set(CDR(iduser)=${iduser})
exten => _X.,n(start),Set(__cost=${GENERIC_WORX(select aleg_retail_cost_min from cc_did where did=${CALLERID(dnid)})})
exten => _X.,n,Set(CDR(cost)=${cost})
exten => _X.,n,Set(__result=${GENERIC_WORX(select destination_name did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish)
exten => _X.,n,Set(__result1=${GENERIC_WORX(select destination did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,Set(__priority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n(routing),GotoIf($["${result1}" = ""]?finish)
exten => _X.,n,GotoIf($["${result}" = "Queues"]?enter-queues,${EXTEN},1)
exten => _X.,n,GotoIf($["${result}" = "VM"]?didvmmain,${EXTEN},1)
exten => _X.,n,GotoIf($["${result}" = "Extensions"]?calls-to-extensions,${EXTEN},1)
exten => _X.,n,GotoIf($["${result}" = "External"]?External-TFN,${EXTEN},1)
exten => _X.,n,GotoIf($["${result}" = ""]?finish:finish)
exten => _X.,n(finish),Hangup



[enter-queues]
exten => _X.,1,Answer
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSubIf($[${result1} = 8801]?checktime,1)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(__agentext=${GENERIC_WORX(SELECT `membername` FROM `cc_queue_member_table` WHERE `queue_name`= ${result1})})
exten => _X.,n,NoOP(${agentext})
exten => _X.,n,Set(qtime_out=${GENERIC_WORX(SELECT `timeout` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(findpriority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,Queue(${result1},HhTtKkWw,,,${qtime_out},,,test-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
;exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "TIMEOUT"]?jumping-priority,${global_did},1:finish_queue)
;exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "JOINEMPTY"]?jumping-priority,${global_did},1:finish_queue)
exten => _X.,n,GotoIf([$["${QUEUESTATUS}" = "TIMEOUT"]|$["${QUEUESTATUS}" = "JOINEMPTY"]]?:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_WORX(SELECT `fail_status` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_WORX(SELECT `fail_dest` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_WORX(SELECT `fail_data` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:finish_queue)
exten => _X.,n(finish_queue),Hangup
exten => checktime,1,GoToIfTime(08:30-11:30,*,*,*?hang)
exten => checktime,n,return
exten => checktime,n(hang),HangUp
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()


[test-announcement]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(CDR(extension)=${cut_agent})
same => n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
same => n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
same => n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
same => n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Inbound(connected),${lc_id},3)
same => n,Set(voice=${GENERIC_WORX(select playback from cc_did where did=${global_did})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()






[ttt]
exten => 12345,1,Read(DIGIT,mcm_conf,1,,3,3)
exten => 12345,2,NoOp(${DIGIT})
exten => 12345,3,GotoIf($[${DIGIT} = 1 ]?meetp,${EXTEN},1)
exten => 12345,4,GotoIf($[${DIGIT} = 2 ]?meet-admin,${EXTEN},1)
exten => 12345,5,Playback(goodbye)
exten => 12345,n,hangup

[randomivr]
exten => _X.,1,Answer()
exten => _X.,n, Set(ExtenNo=${RAND(1,8)})
exten => _X.,n,Goto(random-list,EX${ExtenNo},${ExtenNo})

[random-list]
exten => EX1,1,NoOp(random-list)
same => n,Read(INPUT,custom/press1w,1,,2,5)
same => n,GotoIf($[${INPUT}=1]?MulDevices:MulHangup)
same => n(MulDevices),GoTo(testing-setup,${global_did},1)
same => n(MulHangup),playback()



[meetmein]
exten => _X.,1,Read(DIGIT,mcm_conf,1,,3,3)
exten => _X.,2,NoOp(${DIGIT})
exten => _X.,3,GotoIf($[ ${DIGIT} = 1 ]?meetp,${EXTEN},1)
exten => _X.,4,GotoIf($[ ${DIGIT} = 2 ]?meet-admin,${EXTEN},1)
exten => _X.,5,Playback(goodbye)
exten => _X.,6,hangup
exten => 1111,1,Answer()
exten => 1111,n,MusicOnHold()
exten => 1111,n,Hangup()

exten => s,1,Read(DIGIT,mcm_conf,1,,3,3)
exten => s,2,NoOp(${DIGIT})
exten => s,3,GotoIf($[ ${DIGIT} = 1 ]?meetp,${EXTEN},1)
exten => s,4,GotoIf($[ ${DIGIT} = 2 ]?meet-admin,${EXTEN},1)
exten => s,5,Playback(goodbye)
exten => s,6,hangup


[meet-p]
exten => _X.,1,MeetMe(,MPsw)
exten => _X.,n,hangup

[meetadmin]
exten => _X.,1,MeetMe(,asMAP)
exten => _X.,n,hangup

[meetp]
exten => _X.,1,Read(meetmeconfnum,conf-getconfno,,,3,5)
exten => _X.,2,Set(CDR(userfield)=${meetmeconfnum})
exten => _X.,3,AGI(checkconf.agi,${meetmeconfnum},0)
exten => _X.,4,Read(meetmeconfpin,conf-getpin,,,3,5)
exten => _X.,5,Set(GLOBAL(confpin)=${meetmeconfpin})
exten => _X.,6,NoOp(${confpin})
exten => _X.,7,AGI(checkconf.agi,${meetmeconfnum},0,${confpin})
exten => _X.,8,NooP(${CDR(accountcode)})
exten => _X.,9,MeetMe(${meetmeconfnum},swM)
exten => _X.,10,Hangup


[meet-admin]
exten => _X.,1,Read(meetmeconfnum,conf-getconfno,,,3,5)
exten => _X.,2,Set(CDR(userfield)=${meetmeconfnum})
exten => _X.,3,AGI(checkconf.agi,${meetmeconfnum},1)
exten => _X.,4,MeetMe(${meetmeconfnum},asMAP)
exten => _X.,5,Hangup




;[check-limit]
;exten => _X.,1,NoOp("Check Limit for  Dialed number ${EXTEN}")
;same => n,Set(__CALLNUM=${EXTEN})
;same => n,MYSQL(Connect myconn localhost root tumko34h1se asterisk)
;same => n,MYSQL(Query result ${myconn} select called_count from vicidial_list where phone_number='${CALLNUM}')
;same => n,MYSQL(Fetch fetch ${result} count_limit)
;same => n,NoOp(Call Count Attempts = ${count_limit})
;same => n,GotoIf($[${count_limit}<=6]?return:finish)
;same => n(finish),NoOP(${call_count} number attempt is exceeded)
;same => n,Hangup()
;same => n(return),Return()

[worxpertise-inbound]
exten => _X.,1,Progress
exten => _X.,n,Set(__global_did=${CALLERID(dnid)})
exten => _X.,n,Set(CONNECTEDLINE(num,i)=${global_did})
exten => _X.,n,Set(__global_clin=${CALLERID(num)})
exten => _X.,n,Set(USER_GROUP=${GENERIC_WORX(SELECT `user_group` FROM `vicidial_inbound_dids` WHERE `did_pattern`=${global_did})})
exten => _X.,n,Set(callerblacklist=${GENERIC_WORX(SELECT `status` FROM `vicidial_blacklist` WHERE caller_id=${CALLERID(num):-10})})
exten => _X.,n,GoToIf($["${callerblacklist}" == "1"]?circuits)
exten => _X.,n,AGI(agi-DID_route.agi)
exten => _X.,n(circuits),playback(all-circuits-busy-now)
exten => _X.,n,Hangup()
exten => h,1,AGI(agi://127.0.0.1:4577/call_log--HVcauses--PRI-----NODEBUG-----${HANGUPCAUSE}-----${DIALSTATUS}-----${DIALEDTIME}-----${ANSWEREDTIME}-----${HANGUPCAUSE(${HANGUPCAUSE_KEYS()},tech)}))




[check-limit]
exten => _X.,1,Goto(s,1)
exten => s,1,NoOp("Check Limit for  Dialed number")
same => n,Set(tempo=${CUT(CHANNEL,/,2)})
same => n,Set(CALLNUM=${CUT(tempo,-,1)})
same => n,Set(CALLNUM=${CUT(CALLNUM,@,1)})
same => n,Set(phone=${CALLNUM:2})
same => n,Set(__call_count=${GENERIC_WORX(select called_count from vicidial_list where phone_number=${phone})})
same => n,Set(__source_id=${GENERIC_WORX(select source_id from vicidial_list where phone_number=${phone})})
same => n,Set(__list_id=${GENERIC_WORX(select list_id from vicidial_list where phone_number=${phone})})
same => n,Verbose(Fetch Data from vicidial_list CRM_ID : ${source_id}  LIST_ID : ${list_id})
same => n,GotoIf($["${call_count}" <= "6"]?return:finish)
same => n(finish),NoOP(Dialed number attempt max : 6 found Call Count: ${call_count} this number: ${phone} can not be dialed now by the dialer)
same => n,Hangup()
same => n(return),Return()

