[Survey]
exten => s,1,Answer
exten => s,n,Set(mDATETIME=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)})
exten => s,n,MYSQL(Connect conid asterisk survey survey asterisk)
exten => s,n,GotoIf($["${conid}" = ""]?error,1)
exten => s,n,MYSQL(Query resultid ${conid} INSERT INTO Survey SET uid=${UNIQUEID},calldate='${mDATETIME}',csexten=${BRIDGEPEER:4:4},language=${Lang},callernum=${CALLERID(num)})
exten => s,n,MYSQL(Clear ${resultid})
exten => s,n,MYSQL(Disconnect ${conid})
exten => s,n,GotoIf($["${resultid}" = "-1"]?error,1)
; calls been transferred, insert db with ext, time, callernum etc.

exten => s,n,Set(TIMEOUT(response)=6)
exten => s,n,PlayBack(survey/p-${Lang})
; please intro message

exten => s,n,Set(questionum=1)
exten => s,n(nextques),Set(tryagain=0)
exten => s,n(try1),BackGround(survey/q-${Lang}-${questionum})
exten => s,n,WaitExten()
exten => _[1-5],1,Set(ansdigit=${EXTEN})
exten => _[1-5],n,Macro(sqlupdate,${ansdigit})
exten => _[1-5],n,Goto(loop,1)
exten => i,1,Set(tryagain=${MATH(${tryagain}+1,i)})
exten => i,n,GotoIf($[${tryagain} < 2]?s,try1)
exten => i,n,Goto(loop,1)
exten => t,1,Goto(i,1)
; play questions, get answers, update sql with Macro, timeout/invalid once repeat, twice to skip (answers default were 0)
exten => loop,1,Set(questionum=${MATH(${questionum}+1,i)})
exten => loop,n,GotoIf($[${questionum}=4]?finishsurvey,1)
exten => loop,n,Goto(s,nextques)
; repeat above
exten => finishsurvey,1,BackGround(survey/e-${Lang})
exten => finishsurvey,n,Hangup

exten => error,1,Noop(Connection error)
exten => error,n,Background(survey/network_difficulty)
exten => error,n,Hangup

[macro-sqlupdate]
exten => s,1,MYSQL(Connect conid asterisk survey survey asterisk)
exten => s,n,GotoIf($["${conid}" = ""]?error,1)
exten => s,n,MYSQL(Query resultid ${conid} UPDATE Survey SET answer '${questionum}'='${ARG1}' WHERE uid='${UNIQUEID}')
exten => s,n,MYSQL(Clear ${resultid})
exten => s,n,MYSQL(Disconnect ${conid})
exten => s,n,MacroExit
; Macro to update sql


;####################################################################
; id , cid, feedback_no, feedback
[survey]
exten => 555,1,Playback("survey-intro")
;Read(variable[,filename][,maxdigits][,option][,attempts][,timeout])
exten => 555,n,Read(CALIF,"plese-press",1,,,3)
exten => 555,n,SayDigits(${CALIF})
exten => 555,n,AGI(testphp.php,${EXTEN},${CALLERID(all)},${CALLERID(num)},${CALIF})
exten => 555,n,Playback("thank-you-for-calling")
exten => 555,n,Hangup



[some_context]
 ;dial trunk 
 exten => _X.,1,Dial(SIP/trunk/${EXTEN})
 ;exten h must be in same context! 
 exten => h,1,noop("extended CDR")
 exten => h,n,set(CDR(hangupcause)=${HANGUPCAUSE})                                   ; hangupcause
 exten => h,n,set(CDR(peerip)=${CHANNEL(peerip)})                                    ; like 10.0.0.5 if behind nat
 exten => h,n,set(CDR(recvip)=${CHANNEL(recvip)})                                     ; like 194.79.52.192 - public ip
 exten => h,n,set(CDR(from)=${CHANNEL(from)})                                          ; like sip:1111@sip.proxy.cz
 exten => h,n,set(CDR(uri)=${CHANNEL(uri)})                                               ; like sip:1111@10.0.0.5
 exten => h,n,set(CDR(useragent)=${CHANNEL(useragent)})                         ; useragent like Aastra_57i
 exten => h,n,set(CDR(codec1)=${CHANNEL(audioreadformat)})                     ; codec *
 exten => h,n,set(CDR(codec2)=${CHANNEL(audiowriteformat)})                    ;
 exten => h,n,set(CDR(llp)=${CHANNEL(rtpqos,audio,local_lostpackets)})      ; lost packets by local end **
 exten => h,n,set(CDR(rlp)=${CHANNEL(rtpqos,audio,remote_lostpackets)})  ; lost packets by remote end
 exten => h,n,set(CDR(ljitt)=${CHANNEL(rtpqos,audio,local_jitter)})               ; the same for jitter
 exten => h,n,set(CDR(rjitt)=${CHANNEL(rtpqos,audio,remote_jitter)})


[from-internal-xfer]
exten => _0.,1,Dial(SIP/${EXTEN:1},20,tT)
exten => _0.,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => _0.,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => _0.,n,Goto(CallBack)
exten => _0.,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => _0.,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => _0.,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => _0.,n,Dial(${CALLER},,tT)
exten => _0.,n(Fail),Hangup()
exten => 9,1,Set(CALLERID(name)=${CALLERID(name)}-from-Traveloes)
exten => 9,n,Queue(5505,twW)
exten => 9,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 9,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 9,n,Goto(CallBack)
exten => 9,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 9,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 9,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 9,n,Dial(${CALLER},,tT)
exten => 9,n(Fail),Hangup()
exten => 1,1,Set(CALLERID(name)=${CALLERID(name)}-from-Traveloes)
exten => 1,n,Dial(SIP/a2ztech/18001800000,,tT)
exten => 1,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 1,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 1,n,Goto(CallBack)
exten => 1,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 1,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 1,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 1,n,Dial(${CALLER},,tT)
exten => 1,n(Fail),Hangup()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(BP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()




[bigpbx-queues]
exten => _X.,1,Answer
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSubIf($[${result1} = 8801]?checktime,1)
exten => _X.,n,GoSub(live_call,1)
;exten => _X.,n,GoSubIf($[${result1} = 5515]?checktime,1)
exten => _X.,n,Set(qtime_wait=${GENERIC_SQL(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(qtime_out=${GENERIC_SQL(SELECT `queue_timeout` FROM `queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(priority=${GENERIC_SQL(SELECT `priority` FROM `cc_target` WHERE `did`= ${CALLERID(dnid)})})
exten => _X.,n,GotoIf($[$["${priority}" != ""] & $["${priority}" > "0"]]?:jump2queue)
exten => _X.,n,Gosub(findposition-gosub,s,1(${priority},${result1},${global_did}))
exten => _X.,n(jump2queue),Queue(${result1},twW,,,${qtime_out},,,sub-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
exten => _X.,n,GotoIf([$["${QUEUESTATUS}" = "TIMEOUT"]|$["${QUEUESTATUS}" = "JOINEMPTY"]]?:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_SQL(SELECT `fail_status` FROM `queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_SQL(SELECT `fail_dest` FROM `queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_SQL(SELECT `fail_data` FROM `queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:devices,${EXTEN},routing)
exten => _X.,n(finish_queue),Hangup

;exten => checktime,1,GoToIfTime(08:30-15:30,*,*,*?hang)
;exten => checktime,1,GoToIfTime(08:30-11:30,*,*,*?hang)
exten => checktime,n,return
exten => checktime,n(hang),HangUp

exten => live_call,1,Set(BP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${BP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()

exten => h,1,ExecIf($[${lc_id} != ""]?Set(BP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()




[calllisten]
exten => _X.,1,Answer
exten => _X.,n,NoCDR
exten => _X.,n,Wait(1)
exten => _X.,n,ChanSpy(sip/${EXTEN},q)
exten => _X.,n,Hangup

[findposition-gosub]
exten => s,1,Set(LOCAL(count)=${QUEUE_WAITING_COUNT(${ARG2})})
exten => s,n,While($[${count} >= 1])
exten => s,n,Set(LOCAL(queuechannel)=${QUEUE_GET_CHANNEL(${ARG2},${count})})
exten => s,n,Set(LOCAL(channelpriority)=${IMPORT(${queuechannel},priority)})
exten => s,n,Gotoif($[${channelpriority}<=${ARG1}]?:notequal)
exten => s,n,ExitWhile()
exten => s,n(notequal),Set(LOCAL(count)=${MATH(${count}-1,int)})
exten => s,n,EndWhile()
exten => s,n,return(${MATH(${count}+1,int)})

[barge]
exten => s,1,Asnwer()
exten => s,n,Chanspy(${chan})
exten => s,n,HangUp()





[c2c_iglobal]
exten => _X.,1,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,Set(extension=${CUT(extension,@,1)})
exten => _X.,n,Set(extension=${CUT(extension,:,1)})
exten => _X.,n,Set(userid=${GENERIC_SQL(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${userid})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_SQL(SELECT `outbound_cid` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CALLERID(num)=${out_cli})
exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(dest_name)=outbound)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,AGI(iglobal.php,1)
exten => _X.,n,Hangup


;#######################################################################
[meetmein]
exten => _X.,1,Read(DIGIT,mcm_conf,1,,3,3)
exten => _X.,2,NoOp(${DIGIT})
exten => _X.,3,GotoIf($[ ${DIGIT} = 1 ]?meetp,${EXTEN},1)
exten => _X.,4,GotoIf($[ ${DIGIT} = 2 ]?meet-admin,${EXTEN},1)
exten => _X.,5,Playback(goodbye)
exten => _X.,6,hangup
exten => 1111,1,Answer()
exten => 1111,n,MusicOnHold()
exten => 1111,n,Hangup()

exten => s,1,Read(DIGIT,mcm_conf,1,,3,3)
exten => s,2,NoOp(${DIGIT})
exten => s,3,GotoIf($[ ${DIGIT} = 1 ]?meetp,${EXTEN},1)
exten => s,4,GotoIf($[ ${DIGIT} = 2 ]?meet-admin,${EXTEN},1)
exten => s,5,Playback(goodbye)
exten => s,6,hangup


[meet-p]
exten => _X.,1,MeetMe(,MPsw)
exten => _X.,n,hangup

[meetadmin]
exten => _X.,1,MeetMe(,asMAP)
exten => _X.,n,hangup

[meetp]
exten => _X.,1,Read(meetmeconfnum,conf-getconfno,,,3,5)
exten => _X.,2,Set(CDR(userfield)=${meetmeconfnum})
exten => _X.,3,AGI(checkconf.agi,${meetmeconfnum},0)
exten => _X.,4,Read(meetmeconfpin,conf-getpin,,,3,5)
exten => _X.,5,Set(GLOBAL(confpin)=${meetmeconfpin})
exten => _X.,6,NoOp(${confpin})
exten => _X.,7,AGI(checkconf.agi,${meetmeconfnum},0,${confpin})
exten => _X.,8,NooP(${CDR(accountcode)})
exten => _X.,9,MeetMe(${meetmeconfnum},swM)
exten => _X.,10,Hangup


[meet-admin]
exten => _X.,1,Read(meetmeconfnum,conf-getconfno,,,3,5)
exten => _X.,2,Set(CDR(userfield)=${meetmeconfnum})
exten => _X.,3,AGI(checkconf.agi,${meetmeconfnum},1)
exten => _X.,4,MeetMe(${meetmeconfnum},asMAP)
exten => _X.,5,Hangup


[conference]
exten => _X.,1,verbose(Start Conference Call....../n);
same=>n,Answer();
same=>n,Agi(myagi/googletts.agi,"Welcome to mycountry mobile network Conference service",en);
same=>n(ini),Agi(myagi/googletts.agi,"Please enter conference pin number",en);
same=>n,Read(CONF_PIN,"silence/1",11,,,5);
same=>n,Agi(myagi/conf_pin.agi,${CONF_PIN});
same=>n,GotoIf($["${PINSTATUS}"="1"]?ok:err);
same=>n,Hangup();
same=>n(ok),Agi(myagi/googletts.agi,"Hello,${MESSAGE}",en);
;same=>n,MeetMe(${EXTEN},dTMc)
same =>n(ok),MeetMe(${EXTEN},dTMc)
;same => n,MeetMe(${EXTEN},rdTMc);Make new Room and record call
same=>n,MusicOnHold();
ame=>n,Hangup();
same=>n(err),Agi(myagi/googletts.agi,"${MESSAGE}",en);
same=>n,Goto(ini);
same=>n,Busy(10)
same=>n,Hangup()

[set-callback]
exten => 9,1,NoOp("------------------------>Call back context<-----------------------")
exten => 9,n,Set(LANG=en)
exten => 9,n(Start),agi(googletts.agi,"Please enter your number, We will be happy to call you back!, followed by the hash key.",${LANG})
exten => 9,n,Playback(after-the-tone)
exten => 9,n,Playback(enter-phone-number10)
exten => 9,n,Read(CALLBACKNUM,beep,10,,2,5) ; This is where you request the CallBack Number from your customer. Put your own prompts or whatever here.
exten => 9,n,GotoIf($["${LEN(${CALLBACKNUM})}"="10"|"${LEN(${CALLBACKNUM})}"="7"]?GoodNumDigit)
exten => 9,n,Playback(wrong-try-again-smarty)
exten => 9,n,GoTo(1)
exten => 9,n(GoodNumDigit),MYSQL(Connect connid localhost root tumko34h1se worxdialer)
exten => 9,n,MYSQL(Query r ${connid} SELECT callbacknum FROM callback_blacklist WHERE callbacknum=${CALLBACKNUM})
exten => 9,n,MYSQL(Fetch f ${r} CALLBACKNUM)
exten => 9,n,GotoIf($["${f}"="1"]?:GoodNum)
exten => 9,n,Playback(you-dialed-wrong-number)
exten => 9,n,Playback(pls-try-again)
exten => 9,n,GoTo(1)
exten => 9,n(GoodNum),Playback(you-entered)
exten => 9,n,NoOp(${CALLBACKNUM})
exten => 9,n,NoOp(${CALLERID})
exten => 9,n,SayDigits(${CALLBACKNUM})
exten => 9,n,Wait(1)
exten => 9,n,Playback(after-the-tone)
exten => 9,n,Playback(if-this-is-correct)
exten => 9,n,Playback(press-1)
exten => 9,n,Playback(if-this-is-not-correct)
exten => 9,n,Playback(press-2)
exten => 9,n,Read(CORRECT,beep,1,,2,5)
exten => 9,n,GotoIf($["${CORRECT}"="1"]?:1)
exten => 9,n,NoOp(${LEN(${CALLBACKNUM})})
exten => 9,n,NoOp(${CALLBACKNUM})
exten => 9,n,GotoIf($["${LEN(${CALLBACKNUM})}"="10"]?TenDigits)
exten => 9,n(Add9),Set(CALLBACKNUM=9${CALLBACKNUM})
exten => 9,n,GoTo(StoreNum)
exten => 9,n(TenDigits),GoToIf($["${CALLBACKNUM:0:3}"="210"]?:Not210)
exten => 9,n,Set(CALLBACKNUM=${CALLBACKNUM:3:7})
exten => 9,n,GoTo(Add9)
exten => 9,n(Not210),Set(CALLBACKNUM=91${CALLBACKNUM})
exten => 9,n(StoreNum),MYSQL(Query r ${connid} UPDATE callback_callers SET callback=1,callbacknum='${CALLBACKNUM}',queueid='${queueid}' WHERE uniqueid=${UNIQUEID})
exten => 9,n,MYSQL(Disconnect ${connid})
exten => 9,n,NoOp(${CALLBACKNUM})
exten => 9,n,agi(googletts.agi,"Thank you! We will get in touch with you as soon as possible.",${LANG})
exten => 9,n,Playback(goodbye)
exten => 9,n,Hangup
exten => h,1,MYSQL(Connect connid localhost bigdialer tumko34h1se bigdialer)
exten => h,n,MYSQL(Query r ${connid} DELETE FROM callback_callers where uniqueid=${UNIQUEID} AND callback=0)
exten => h,n,MYSQL(Clear ${r})
exten => h,n,MYSQL(Disconnect ${connid})
exten => start,1,NoOp(copy callback.call file to /var/spool/asterisk/outgoing)
;exten => h,n,System(echo -e "Channel: SIP/${CALLERID(num)}\\nContext: Main\\nExtension: 222" > /tmp/${UNIQUEID}.call)
exten => start,n,System(echo -e "Channel: SIP/Airtell-PRI/${CALLBACKNUM}\\nContext: queues\\nExtension: 333" > /tmp/${UNIQUEID}.call)
exten => start,n,System(/bin/sleep 10s)
exten => start,n,System(mv /tmp/${UNIQUEID}.call /var/spool/asterisk/outgoing/)
exten => hangup,1,hangup

[Local-Extensions]
exten => _.,1,NoOp()
exten => _.,n,Goto(dialplan-setup,${EXTEN:-15},1)

[dialplan-setup]
exten => _X.,1,GoTo(s,1)
exten => s,1,Answer()
exten => s,n,Set(CDR(call_type)=0)
exten => s,n,Set(caller=${CALLERID(num):-15})
exten => s,n,Set(dialnum=${CALLERID(dnid):-15})
exten => s,n,Set(CallStartTime=${EPOCH})
exten => s,n,Set(HangUpCause=NORMAL)
exten => s,n,Set(NoInputRetry=0)
exten => s,n,Set(InvalidInputRetry=0)
exten => s,n,Set(HangUpBy=Customer)
exten => s,n,Set(record_file_name=/home/centos/recordingFile/${Caller}-${EPOCH}-${dialnum}-${UNIQUEID}.wav)
exten => s,n,Set(PromptRecordPath=/home/VFOSounds/RecordingPrompt)
exten => s,n,Set(try=0)
exten => s,n,Set(try1=0)
exten => s,n,Set(try2=0)
exten => s,n,Set(try3=0)
exten => s,n,Set(callstatus=Inbound)
exten => s,n,Set(CDR(did)=${CALLERID(dnid):-15})
exten => s,n,Set(__global_did=${CALLERID(dnid):-15})
exten => s,n,Set(__global_clin=${CALLERID(num):-15})
exten => s,n,GoSub(accValid,1)
exten => s,n,NoOp(dest_action :: ${dest_action})
exten => s,n,GoTOIf($["${destination_name}" = ""]?hang)
exten => s,n,GoToIf($["${destination}" = ""]?hang)
exten => s,n,Set(CDR(dest_name)=${destination})
exten => s,n,MixMonitor(${caller}-${dialnum}-${EPOCH}.wav)
exten => s,n,GoSub(live_call,1)
exten => s,n,GoToIf($["${dest_action}" = "2"]?dialexten,1:enter_queue,1)
exten => s,n,GoToIf($["${dest_action}" = "3"]?dialexten,1:enter_queue,1)
exten => s,n(hang),HangUp()
exten => enter_queue,1,NoOp(queue :: ${destination})
exten => enter_queue,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => enter_queue,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => enter_queue,n,Set(CDR(dest_name)=${destination})
exten => enter_queue,n,Set(qtime_out=${GENERIC_WORX(SELECT `queue_timeout` FROM `cc_queue_table` WHERE `name`= ${destination})})
exten => enter_queue,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => enter_queue,n,Set(position=1)
exten => enter_queue,n,GotoIf($[${destination} = 9120]?travomintivr,1)
exten => enter_queue,n,GotoIf($[${destination} = 505]?snvaivr,1)

exten => enter_queue,n(toqueue),Queue(${destination},twW,,,${qtime_out},,,play-announcement,,${position})
exten => enter_queue,n,HangUp()
exten => checktime,1,GoToIfTime(09:30-19:00,*,*,*?enter_queue,toqueue)
exten => checktime,n,Set(destination=918869023049)
exten => checktime,n,GoTo(dialexten,1)
exten => travomintivr,1,Read(ch,travomint/travomint_wel,1,,3,5)
exten => travomintivr,n,GoToIf($[${ch} = 1]?eng,1)
exten => travomintivr,n,GoToIf($[${ch} = 2]?hindi,1)
exten => travomintivr,n,GoTo(eng,1)
exten => eng,1,set(CALLERID(num)=Eng-${CALLERID(num)})
exten => eng,n,set(home=travomint/english)
exten => eng,n,GoTo(main,1)
exten => hindi,1,set(CALLERID(num)=hin-${CALLERID(num)})
exten => hindi,n,set(home=travomint/hindi)
exten => hindi,n,GoTo(main,1)
exten => main,1,Read(ch,${home}/travomintmain,1,,3,5)
exten => main,n,GoToIf($[${ch} = 1]?travominttime,1)
exten => main,n,GoToIf($[${ch} = 2]?travominttime,1)
exten => main,n,GoTo(travominttime,1)
exten => travominttime,1,GoTo(enter_queue,toqueue)
exten => travominttime,n,Set(destination=9873130805)
exten => travominttime,n,GoTo(followme1,1)
exten => snvaivr,1,Read(ch,snvawelcome_live,3,,3,8)
exten => snvaivr,1,GoToIf($[${ch} = 1]?hr,1)
exten => snvaivr,n,GoToIf($[${ch} = 2]?admin,1)
exten => snvaivr,n,GoToIf($[${ch} = 3]?others,1)
exten => snvaivr,n,GoToIf($[${LEN(${ch})} = 3]?localdial,1)
exten => snvaivr,n,GoTo(enter_queue,toqueue)
exten => hr,1,Set(destination=9125)
exten => hr,n,Set(CALLERID(num)=HR-${CALLERID(num)}
exten => hr,n,GoTo(enter_queue,toqueue)
exten => admin,1,Set(destination=9130)
exten => admin,n,Set(CALLERID(num)=admin-${CALLERID(num)})
exten => admin,n,GoTo(enter_queue,toqueue)
exten => others,1,Set(destination=9125)
exten => others,n,Set(CALLERID(num)=others-${CALLERID(num)})
exten => others,n,GoTo(enter_queue,toqueue)
exten => localdial,1,Set(destination=${ch})
exten => localdial,n,GoTo(dialexten,1)
exten => travominttime,1,GoToIfTime(09:30-18:30,mon-fri,*,*?enter_queue,toqueue)
exten => travominttime,n,Set(destination=918869023049)
exten => travominttime,n,GoTo(followme1,1)
exten => dialexten,1,NoOp(dial exten :: ${destination})
exten => dialexten,n,ExecIf($[ "${playsoundfile}" != ""]?playback(${playsoundfile}))
exten => dialexten,n,Mixmonitor(${PromptRecordPath}/${record_file_name}.wav,b)
exten => dialexten,n,Dial(${destination},30,rgU(play-announcement))
exten => dialexten,n,GoToIf($["${destination}" = "${destination}"]?followme,1)
exten => dialexten,n,HangUp()
exten => followme,1,Dial(SIP/PSTN-Trunk/918869023049,30,rgU(play-announcement))
exten => followme,n,HangUp()
exten => followme1,1,Dial(SIP/PSTN-Trunk/${destination},30,rgU(play-announcement))
exten => followme1,n,HangUp()
exten => live_call,1,Set(WP_LC_BEGIN(${userid},${UNIQUEID},${dialnum},${caller},${destination},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${userid},${UNIQUEID},${dialnum},${caller},${destination},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => caller_valid,1,Set(caller_block=${YBP_CHECK_BLOCK(${ticCaller})})
exten => caller_valid,n,Return
exten => accValid,1,NoOP(DID=${dialnum}&CallerNumber=${caller}&CallUniqueID=${UNIQUEID})
exten => accValid,n,Set(ARRAY(id_cc_card,destination_name,destination)=${YBP_GET_INFO(${dialnum})})
exten => accValid,n,Set(GROUP()=${UserID})
exten => accValid,n,Set(CDR(id_cc_card)=${userid})
exten => accValid,n,GoToIf($[${account_status} = 0]?did_inactive,1)
exten => did_inactive,n,HangUp()
exten => h,1,NoOp()
exten => h,n,Set(WP_LC_END(`id`)=${lc_id})




[play-announcement]
exten => s,1,NoOp(lcid :: ${lc_id})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(cut_agent=${cut_agent:0:15})
same => n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
same => n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
same => n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
same => n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Inbound(connected),${lc_id},3)
same => n,Set(CDR(extension)=${cut_agent})
same => n,Set(ODBC_POP(`clid`,`ExtNo`,`did_no`)=${global_clin},${cut_agent},${global_did})
same => n,Set(voice=${GENERIC_WORX(select playback from cc_did where did=${global_did})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()

[from-queue]
exten => _.,1,NoCDR()
exten => _.,n,Set(QAGENT=${EXTEN})
exten => _.,n,Dial(SIP/PSTN-Trunk/${QAGENT})
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,NoOp()

[reminderCall]
exten => s,1,Answer()
;exten => s,n,Read(ch,obd1-carrer,1,,,10)
exten => s,n,Read(ch,newivr,1,,,10)
exten => s,n,GoToIf($[${ch} = 1]?hindi,1)
exten => s,n,GoToIf($[${ch} = 2]?eng,1)
exten => s,n,HangUp()
exten => eng,1,Set(ch=2)
exten => eng,n,HangUp()
exten => hindi,1,Queue(5551)
exten => h,1,NoOp(OBDCALL :: ${caller} ${ch} ${EPOCH})
;exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,NoOp()

[testing-queues]
exten => _X.,1,Answer
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSubIf($[${result1} = 8801]?checktime,1)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(qtime_out=${GENERIC_WORX(SELECT `queue_timeout` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(findpriority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,GotoIf($[$["${findpriority}" != ""] & $["${findpriority}" > "0"]]?:jump2queue)
exten => _X.,n,Gosub(position-find,s,1(${findpriority},${result1},${global_did}))
exten => _X.,n(jump2queue),Queue(${result1},twW,,,${qtime_out},,,test-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
exten => _X.,n,GotoIf([$["${QUEUESTATUS}" = "TIMEOUT"]|$["${QUEUESTATUS}" = "JOINEMPTY"]]?:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_WORX(SELECT `fail_status` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_WORX(SELECT `fail_dest` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_WORX(SELECT `fail_data` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:jumping-priority,switchcall,start)
exten => _X.,n(finish_queue),Hangup
exten => checktime,1,GoToIfTime(08:30-11:30,*,*,*?hang)
exten => checktime,n,return
exten => checktime,n(hang),HangUp
exten => live_call,1,Set(WP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()

[test-announcement]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(CDR(extension)=${cut_agent})
same => n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
same => n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
same => n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
same => n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Inbound(connected),${lc_id},3)
same => n,Set(voice=${GENERIC_WORX(select playback from cc_did where did=${global_did})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()


[internal-xfer]
exten => _0.,1,Set(__result1=${EXTEN:1})
exten => _0.,n,Goto(Call-Trasfer-Setup,${result1},1)
exten => _0.,n,Hangup

[Call-Trasfer-Setup]
exten => _X.,1,NoOP()
exten => _X.,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => _X.,n,Set(iduser=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${result1})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${result1})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${result1})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${result1})})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${result1})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${result1})})
exten => _X.,n,Set(dial_out=${GENERIC_WORX(SELECT `dial_timeout` FROM `cc_sip_buddies` WHERE `name`= ${result1})})
exten => _X.,n,Set(callstatus=Call-Transfered)
exten => _X.,n,Set(dialnum=${result1})
;exten => _X.,n,Set(CALLERID(num)=${out_cli})
exten => _X.,n,Set(CALLERID(num)=${global_clin})
;exten => _X.,n,Set(CALLERID(num)=${global_did})
exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(extension)=${result1})
exten => _X.,n,Mixmonitor(${UNIQUEID}.wav,b)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Dial(SIP/${result1},${dial_out},U(transfer_ans,${UNIQUEID}^${result1}))
exten => _X.,n,StopMixMonitor(${mixmvar})
exten => _X.,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => _X.,n,Set(CALLER=${CUT(BLINDTRANSFER,/,2)})
exten => _X.,n,Set(REMOTECALLER=${CUT(CALLER,-,1)})
exten => _X.,n,Set(__reverse_extension=${REMOTECALLER})
exten => _X.,n,Goto(CallBack)
exten => _X.,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => _X.,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)});working
exten => _X.,n(CallBack),Set(CALLERID(all)=${EXTEN} <${CALLERID(num)}>)
exten => _X.,n,goto(Call-Trasfer,1)
exten => _X.,n(Fail),Hangup()
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${extension},${destination},${callstatus},2,${dialnum},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${dialnum},${destination},${callstatus},2,${dialnum},${CHANNEL})})
exten => live_call,n,Return
exten => Call-Trasfer,1,NoOP()
exten => Call-Trasfer,n,goto(reverse-call-to-caller,${reverse_extension},1)
exten => Call-Trasfer,n,Hangup()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()




[reverse-call-to-caller]
exten => _X.,1,GoTo(Call-Trasfer,1)
exten => Call-Trasfer,1,NoOP(Callabck to Caller)
exten => Call-Trasfer,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => Call-Trasfer,n,Set(iduser=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${reverse_extension})})
exten => Call-Trasfer,n,Set(CDR(user_id)=${iduser})
exten => Call-Trasfer,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${reverse_extension})})
exten => Call-Trasfer,n,Set(CDR(dest_name)=${destination})
exten => Call-Trasfer,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${reverse_extension})})
exten => Call-Trasfer,n,Set(CDR(user_id)=${iduser})
exten => Call-Trasfer,n,Set(CDR(call_type)=0)
exten => Call-Trasfer,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${reverse_extension})})
exten => Call-Trasfer,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${reverse_extension})})
exten => Call-Trasfer,n,Set(CDR(dest_name)=${destination})
exten => Call-Trasfer,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${reverse_extension})})
exten => Call-Trasfer,n,Set(dial_out=${GENERIC_WORX(SELECT `dial_timeout` FROM `cc_sip_buddies` WHERE `name`= ${reverse_extension})})
exten => Call-Trasfer,n,Set(callstatus=Reverse-Transfered)
exten => Call-Trasfer,n,Set(dialnum=${reverse_extension})
exten => Call-Trasfer,n,Set(CALLERID(num)=${global_clin})
;exten => Call-Trasfer,n,Set(CALLERID(num)=${global_did})
exten => Call-Trasfer,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => Call-Trasfer,n,Set(CDR(extension)=${reverse_extension})
exten => Call-Trasfer,n,Mixmonitor(${UNIQUEID}.wav,b)
exten => Call-Trasfer,n,GoSub(live_call,1)
exten => Call-Trasfer,n,Dial(SIP/${reverse_extension},${dial_out},U(reverse_ans,${UNIQUEID}^${reverse_extension}))
exten => Call-Trasfer,n,StopMixMonitor(${mixmvar})
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${extension},${destination},${callstatus},2,${dialnum},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${dialnum},${destination},${callstatus},2,${dialnum},${CHANNEL})})
exten => live_call,n,Return
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()








[transfer_ans]
;exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
;exten => s,n,Set(cut_agent=${ARG2})
;exten => s,n,Set(agent_name=)
;exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Call-Transfered(connected),${lc_id},3)
;exten => s,n,Return()
exten => s,1,Set(cut_channel=${CUT(CHANNEL,/,2)})
exten => s,n,Set(cut_agent=${CUT(cut_channel,-,1)})
exten => s,n,Set(CDR(extension)=${cut_agent})
exten => s,n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
exten => s,n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
exten => s,n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Call-Transfered(connected),${lc_id},3)
exten => s,n,Return()


[reverse_ans]
;exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
;exten => s,n,Set(cut_agent=${ARG2})
;exten => s,n,Set(agent_name=)
;exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Call-Transfered(connected),${lc_id},3)
;exten => s,n,Return()

exten => s,1,Set(cut_channel=${CUT(CHANNEL,/,2)})
exten => s,n,Set(cut_agent=${CUT(cut_channel,-,1)})
exten => s,n,Set(CDR(extension)=${cut_agent})
exten => s,n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
exten => s,n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
exten => s,n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Reverse-Transfered(connected),${lc_id},3)
exten => s,n,Return()




[olddialplan]
exten => _0.,1,Dial(SIP/${EXTEN:1},20,tT)
exten => _0.,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => _0.,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => _0.,n,Goto(CallBack)
exten => _0.,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => _0.,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => _0.,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => _0.,n,Dial(${CALLER},,tT)
exten => _0.,n(Fail),Hangup()

exten => 1,1,Dial(SIP/IDTTECH/18082785330,60,tT)
exten => 1,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 1,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 1,n,Goto(CallBack)
exten => 1,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 1,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 1,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 1,n,Dial(${CALLER},,tT)
exten => 1,n(Fail),Hangup()

exten => 9,1,Dial(SIP/IDTTECH/18023278707,60,tT)
exten => 9,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 9,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 9,n,Goto(CallBack)
exten => 9,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 9,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 9,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 9,n,Dial(${CALLER},,tT)
exten => 9,n(Fail),Hangup()

exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()


[position-find]
exten => s,1,Set(LOCAL(count)=${QUEUE_WAITING_COUNT(${ARG2})})
exten => s,n,While($[${count} >= 1])
exten => s,n,Set(LOCAL(queuechannel)=${QUEUE_GET_CHANNEL(${ARG2},${count})})
exten => s,n,Set(LOCAL(channelpriority)=${IMPORT(${queuechannel},priority)})
exten => s,n,Gotoif($[${channelpriority}<=${ARG1}]?:notequal)
exten => s,n,ExitWhile()
exten => s,n(notequal),Set(LOCAL(count)=${MATH(${count}-1,int)})
exten => s,n,EndWhile()
exten => s,n,return(${MATH(${count}+1,int)})

[SETRINGING]
exten => 1,1,Set(GLOBAL(RINGING_CHANNEL_${agent})=${CHANNEL})
same => n,Set(${GOSUB_RESULT}__=CONTINUE)
same => n,Return

[SETBUSY]
exten => s,1,Verbose(Pausing ${agentext} in all queues)
same => n,Set(GLOBAL(RINGING_CHANNEL_${agentext})=none)
same => n,PauseQueueMember(,SIP/${agentext})
same => n,Set(${GOSUB_RESULT}__=CONTINUE)
same => n,Return



[mytrunk]
exten => _X.,1,Dial(SIP/8444534881/${EXTEN},60,HL)
exten => _X.,n,Hangup



[testing-vm]
exten => _X.,1,Verbose(voicemail started)
exten => _X.,n,VoiceMail(${result1}@default)
exten => _X.,n,hangup()

[istening_call]
exten => _X.,1,Answer
exten => _X.,n,NoCDR
exten => _X.,n,Wait(1)
exten => _X.,n,ChanSpy(sip/${EXTEN},q)
exten => _X.,n,Hangup


[c2c_call]
exten => _X.,1,Verbose( 1 The channel name is ${CALLERID(all)})
exten => _X.,n,Verbose( 2 The channel name is ${CALLERID(dnid)})
exten => _X.,n,Verbose( 3 The channel name is ${CALLERID(name)})
exten => _X.,n,Verbose( 4 The channel name is ${CALLERID(num)})
exten => _X.,n,Verbose( 5 The channel name is ${CALLERID(rdnis)})
exten => _X.,n,Set(ext=${CUT(EXTEN,:,1)})
exten => _X.,n,Set(dnid=${CUT(EXTEN,:,2)})
exten => _X.,n,Set(CALLERID(num)=${dnid})
exten => _X.,n,Dial(SIP/${ext},60,HTtL)
exten => _X.,n,Hangup

[c2ctest_bigpbx]
exten => _X.,1,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,Set(extension=${CUT(extension,@,1)})
exten => _X.,n,Set(extension=${CUT(extension,:,1)})
exten => _X.,n,Set(userid=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${userid})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CALLERID(num)=${out_cli})
exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(dest_name)=outbound)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,deadAGI(bigpbx.php,1)
exten => _X.,n,Hangup

[jumping-OutBond-Calls]
exten => _X.,1,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(CDR(userfield)=${CHANNEL(recvip)})
exten => _X.,n,ExecIf($[${EXTEN:0:2} = 44]?goto(exit))
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => _X.,n,Set(WhiteList=true)
exten => _X.,n,AGI(SSagi/whiteList.php,${CALLERID(dnid)})
exten => _X.,n,GotoIf($["${WhiteList}" = "true"]?continue:exit)
exten => _X.,n(continue),Set(iduser=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=Outbound)
exten => _X.,n,Set(dialnum=${EXTEN})
exten => _X.,n,Set(CALLERID(num)=${out_cli})
;exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,GoSub(peerGet,1(${EXTEN}))
exten => _X.,n,NoOp(sip trunk :: ${trunk})
;exten => _X.,n,Mixmonitor(${UNIQUEID}.wav,b)
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,bi(mixmvar))
exten => _X.,n,Set(CDR(DID)=${CALLERID(dnid)})
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Dial(SIP/${trunk}/${EXTEN},60,U(outbond_ans,${UNIQUEID}^${extension}))
exten => _X.,n,NoOp(dialstatus :: ${DIALSTATUS})
exten => _X.,n,StopMixMonitor(${mixmvar})
exten => _X.,n(exit),Hangup
exten => peerGet,1,Set(dialnum=${ARG1})
exten => peerGet,n,Set(prefix2=${dialnum:0:2})
exten => peerGet,n,Set(prefix3=${dialnum:0:3})
exten => peerGet,n,Set(prefix1=${dialnum:0:1})
exten => peerGet,n,Set(prefix4=${dialnum:0:4})
exten => peerGet,n,ExecIf($["${prefix3}": "91"]?Set(trunk=IDTTECH))
exten => peerGet,n,ExecIf($["${prefix1}": "1"]?Set(trunk=IDTTECH))
exten => peerGet,n,Return()
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${extension},${destination},${callstatus},2,${dialnum},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${dialnum},${destination},${callstatus},2,${dialnum},${CHANNEL})})
exten => live_call,n,Return
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,NoOp()


[queues-ivr]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(voice=${GENERIC_WORX(select play_ivr from cc_queue_table where name=${result1})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()




[exten-ivr]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(voice=${GENERIC_WORX(select play_ivr from cc_sip_buddies where name=${result1})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()


[did-ivr]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(voice=${GENERIC_WORX(select playback from cc_did where did=${global_did})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()


[worxpbx_wholesale]
;exten => _##999555X.,1,Verbose(1,***** Cellular  dialing ${EXTEN} *******)
exten => _#00999X.,1,Verbose(1,***** Cellular  dialing ${EXTEN} *******)
same=> n,NoOP("<--------------WORXPBX Dialer System for Internal And External Calling-------------->")
same=> n,Set(CALLERID(name)=${CALLERID(name)})
same=> n,Set(CALLERID(num)=${CALLERID(num)})
same=> n,Noop(catching the caller Server IP ${CHANNEL(recvip)})
same=> n,GoSub(Mysqlblacklist,s,1())
same=> n,Macro(checkblacklist,${CALLERID(num)})
same=> n,Set(GROUP()=Cellular)
same=> n,Verbose(1,**** Number of concurrent calls are ${GROUP_COUNT(Cellular)})
same=> n,GotoIf($[${GROUP_COUNT(Cellular)} > 50]?999:limit)
same=> n(limit),Goto(coming-out,${EXTEN:6},1)
same=> 999,Verbose(1,***Number of concurrent calls are ${GROUP_COUNT(Cellular)}  over limit)
same=> n,playback(all-circuits-busy-now)
same=> n,Set(DIALSTATUS=CHANUNAVAIL)
same=> n,playback(goodbye)
same=> n,Hangup

[coming-out]
;exten => _X.,n,ExecIf($[${EXTEN:0:3} = 253]?goto(exit))
;exten => _X.,n,ExecIf($[${EXTEN:0:3} = 351]?goto(exit))
exten => _X.,n,Verbose("Whole-Sale-Traffic Coming on this Context")
;exten => _X.,n,GoSub(checktime,1)
exten => _X.,n,Set(CDR(Comment)=${CHANNEL(recvip)})
;exten => _X.,n,GoSub(Mysqlblacklist,s,1())
exten => _X.,n,AGI(SSagi/bigpbx.php,5)
;exten => _X.,n(exit),playback(prepaid-not-authorized-phonenumber&goodby)
exten => _X.,n,Hangup
;exten => checktime,1,GoToIfTime(08:00-18:00,*,*,*?hang)
;exten => checktime,n,return
;exten => checktime,n(hang),Agi(SSagi/googletts.agi,"Dear Team Member,Dialed Number Can not be completed,  Time Condition is enabled. Try to Dial after 6 O Clock! Thank you!",en);
;exten => _X.,n,Hangup

[macro-checkblacklist]
exten => s,1,MYSQL(Connect connid localhost root tumko34h1se worxdialer)
exten => s,2,MYSQL(Query resultid ${connid} SELECT caller_id from cc_blacklist where caller_id=${ARG1} and status = 1)
exten => s,3,MYSQL(Fetch fetchid ${resultid} status)
exten => s,4,MYSQL(Clear ${resultid})
exten => s,5,MYSQL(Disconnect ${connid})
exten => s,6,GoToIf($["${status}" = ""]?7:fail,1)
exten => s,7,NoOp(${edu_agent})
exten => fail,1,NoOp(${edu_agent})
exten => fail,n,Agi(SSagi/googletts.agi,"Dear${edu_agent}!  Set Caller ID! on Zoi per Application! to connect the Call! Thank you",en);
exten => fail,n,Hangup()

[Mysqlblacklist]
exten => s,1,NoOp(--- GO FOR IF CID --- BLACKLIST ---)
exten => s,n,MYSQL(Connect connid localhost root tumko34h1se worxdialer)
same => n,MySql(query resultid ${connid} select callerid from cc_own_blacklist where callerid=${CALLERID(num)} and blockenabled=1)
same => n,MySql(Fetch fetchid ${resultid} blacklistid)
same => n,NoOp(FetchID: ${fetchid} Var1: ${blacklistid} ConnID: ${connid} ResultID: ${resultid})
same => n,GotoIf($["${CALLERID(num)}" = "${blacklistid}"]?blacklisted)
same => n,MySql(clear ${resultid})
same => n,MySql(disconnect ${connid})
same => n,Goto(end)
same => n(blacklisted),NoOp(Cannot dial - ${CALLERID(num)} is blacklisted !)
same => n,MYSQL(clear ${resultid})
same => n,MYSQL(disconnect ${connid})
same => n,Playback(privacy-you-are-blacklisted)
same => n,Hangup()
same => n(end),NoOp(-- Clear --)
same => n,Return()


[macro-pinnumber]
exten => s,1,Answer()
exten => s,n,Playback(please-enter-your&pin_number)
exten => s,n,Read(pin,then-press-pound,4,,1,10)
exten => s,n,MYSQL(Connect connid localhost root tumko34h1se worxdialer)
exten => s,n,MYSQL(Query resultid ${connid} SELECT agent_name from cc_sip_buddies where name=${pin})
exten => s,n,MYSQL(Fetch fetchid ${resultid} accountname)
exten => s,n,MYSQL(Disconnect ${connid})
exten => s,n,NoOp(&& the value found is ${accountname} )
;if the account number is not found, the system hangsup.
exten => s,n,ExecIf($["${accountname}"=""]?playback(hangup-try-again))
exten => s,n,ExecIf($["${accountname}"=""]?HANGUP())
;if the account number IS FOUND the system says "THANK YOU"
exten => s,n,PlayBack(auth-thankyou)
exten => s,n,Hangup()

[SubMysqlblacklist]
exten => s,1,NoOp(--- MACRO --- BLACKLIST ---)
exten => s,n,MYSQL(Connect connid localhost root tumko34h1se worxdialer)
same => n,MySql(query resultid ${connid} select callerid from cc_own_blacklist where callerid='${CALLERID(name)}' and blockenabled = 1)
same => n,MySql(Fetch fetchid ${resultid} blacklistid)
same => n,NoOp(FetchID: ${fetchid} Var1: ${blacklistid} ConnID: ${connid} ResultID: ${resultid})
same => n,GotoIf($["${CALLERID(name)}" = "${blacklistid}"]?blacklisted)
same => n,MySql(clear ${resultid})
same => n,MySql(disconnect ${connid})
same => n,Goto(end)
;same => n(blacklisted),Playback(privacy-you-are-blacklisted)
same => n(blacklisted),NoOp(Cannot dial - ${CALLERID(name)} is blacklisted !)
same => n,MYSQL(clear ${resultid})
same => n,MYSQL(disconnect ${connid})
;same => n,Playback(privacy-you-are-blacklisted)
same => n,Set(tempo=${CUT(CHANNEL,/,2)})
same => n,Set(agent=${CUT(tempo,-,1)})
same => n,Set(edu_agent=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${agent})})
same => n,Agi(SSagi/googletts.agi,"Dear${edu_agent}!  Set Caller ID! on Zoi per Application! to connect the Call! Thank you",en);
same => n,Hangup()
same => n(end),NoOp(-- Clear --)
;same => n(end),Playback(privacy-you-are-blacklisted)
same => n,Return()


[test-calling]
exten => _X.,1,AGI(agi://127.0.0.1:4577/call_log)
exten => _X.,n,AGI(SSagi/setcid.php)
exten => _X.,n,Set(CALLERID(name)=${lookupcid})
exten => _X.,n,NoOP(${lookupcid})
exten => _X.,n,Noop(catching the caller id ${CALLERID(name)})
exten => _X.,n,Dial(sip/555331${EXTEN}@OUTBOND-TRUNK,55,Tto)
exten => _X.,n,Hangup



[transfer-xfer]
exten => _0.,1,Dial(SIP/${EXTEN:1},20,tT)
;exten => _0.,1,Dial(SIP/${EXTEN:7},20,tT)
exten => _0.,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => _0.,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => _0.,n,Goto(CallBack)
exten => _0.,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => _0.,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => _0.,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => _0.,n,Dial(${CALLER},,tT)
exten => _0.,n(Fail),Hangup()

;exten => _2.,1,Dial(SIP/${EXTEN:1},20,tT)
;exten => _2.,1,Set(CALLERID(num)=+919718005842)
exten => _2.,1,Dial(SIP/IDTTECH/${EXTEN:1},20,tT)
exten => _2.,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => _2.,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => _2.,n,Goto(CallBack)
exten => _2.,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => _2.,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => _2.,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => _2.,n,Dial(${CALLER},,tT)
;exten => _2.,n,Dial(SIP/IDTTECH/(${CALLER},,HL)
exten => _2.,n(Fail),Hangup()

exten => 1,1,Dial(SIP/IDTTECH/18082785330,60,tT)
exten => 1,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 1,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 1,n,Goto(CallBack)
exten => 1,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 1,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 1,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 1,n,Dial(${CALLER},,tT)
exten => 1,n(Fail),Hangup()

exten => 9,1,Dial(SIP/IDTTECH/18023278707,60,tT)
exten => 9,n,GotoIf($[ "a${BLINDTRANSFER}" = "a" ]?TransferFailed)
exten => 9,n,Set(CALLER=${CUT(BLINDTRANSFER,-,1)})
exten => 9,n,Goto(CallBack)
exten => 9,n(TransferFailed),GotoIf($[ "a${TRANSFERERNAME}" = "a" ]?Fail)
exten => 9,n,Set(CALLER=${CUT(TRANSFERERNAME,-,1)})
exten => 9,n(CallBack),Set(CALLERID(all)=${EXTEN:1} <${CALLERID(num)}>)
exten => 9,n,Dial(${CALLER},,tT)
exten => 9,n(Fail),Hangup()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(BP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()


[ConferenceRooms]
; standard participant
exten => 602,1,NoOp()
same=>n,Goto(conference,1)
exten => conference,1,NoOp()
same=>n,Set(thisBridge=primary)
same=>n,ConfBridge(${thisBridge},,,volume_ctrl_menu)
exten => conference_joiner,1,NoOp()
same =>n,Read(numberToDial,vm-enter-num-to-call)
same =>n,Originate(SIP/NET2-CALL/${numberToDial},exten,ConferenceRooms,602,1)





[External-TFN]
exten => _X.,1,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,Set(extension=999991)
exten => _X.,n,Set(CDR(userfield)=${CHANNEL(recvip)})
exten => _X.,n,ExecIf($[${EXTEN:0:3} = 971]?goto(exit))
exten => _X.,n,Set(WhiteList=true)
exten => _X.,n,AGI(SSagi/whiteList.php,${CALLERID(dnid)})
exten => _X.,n,GotoIf($["${WhiteList}" = "true"]?continue:exit)
exten => _X.,n(continue),Set(iduser=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${extensioni})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=External-TFN)
exten => _X.,n,Set(dialnum=${result1})
exten => _X.,n,Set(CALLERID(num)=${global_clin})
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,GoSub(peerGet,1(${result1}))
exten => _X.,n,NoOp(sip trunk :: ${trunk})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,bi(mixmvar))
exten => _X.,n,Set(CDR(DID)=${result1})
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Dial(SIP/${trunk}/${result1},60,U(external_tfn,${UNIQUEID}^${extension}))
exten => _X.,n,NoOp(dialstatus :: ${DIALSTATUS})
exten => _X.,n,StopMixMonitor(${mixmvar})
exten => _X.,n,Goto(s-${DIALSTATUS},1)
exten => _X.,n,GotoIf($["${result1}" = ""]?exit:jumping-priority,${global_did},1)
exten => _X.,n(exit),Hangup
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${result1},${global_clin},${destination},${callstatus},2,${extension},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${result1},${global_clin},${destination},${callstatus},2,${extension},${CHANNEL})})
exten => live_call,n,Return
exten => s-NOANSWER,1,Goto(jumping-priority,${global_did},1)
exten => s-BUSY,1,Goto(jumping-priority,${global_did},1)
exten => s-ANSWER,1,Goto(finish_extension)
exten => s-CONGESTION,1,Goto(jumping-priority,${global_did},1)
exten => s-CANCEL,1,Hangup
exten => s-CHANUNAVAIL,1,Goto(jumping-priority,${global_did},1)
exten => finish_extension,1,Hangup
exten => peerGet,1,Set(dialnum=${ARG1})
exten => peerGet,n,Set(prefix2=${dialnum:0:2})
exten => peerGet,n,Set(prefix3=${dialnum:0:3})
exten => peerGet,n,Set(prefix1=${dialnum:0:1})
exten => peerGet,n,Set(prefix4=${dialnum:0:4})
;exten => peerGet,n,ExecIf($["${prefix2}": "44"]?Set(trunk=NET2-CALL))
exten => peerGet,n,ExecIf($["${prefix1}": "1"]?Set(trunk=NET2-CALL))
;exten => peerGet,n,ExecIf($["${prefix2}": "65"]?Set(trunk=NET2-CALL))
;exten => peerGet,n,ExecIf($["${prefix2}": "64"]?Set(trunk=NET2-CALL))
;exten => peerGet,n,ExecIf($["${prefix4}": "9188"]?Set(trunk=NET2-CALL))
exten => peerGet,n,ExecIf($["${prefix2}": "91"]?Set(trunk=NET2-CALL))
exten => peerGet,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()




[external_tfn]
exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
exten => s,n,Set(cut_agent=${ARG2})
exten => s,n,Set(agent_name=)
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},External-TFN(connected),${lc_id},3)
exten => s,n,Return()


;;#########################################################################
[Forward-TFN]
exten => _X.,1,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
;exten => _X.,n,ExecIf($["${CALLERID(num)}" = "4111"]?set(CALLERID(all)=My company<1234489>))
exten => _X.,n,Set(CDR(userfield)=${CHANNEL(recvip)})
exten => _X.,n,ExecIf($[${EXTEN:0:3} = 880]?goto(exit))
exten => _X.,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => _X.,n,Set(iduser=${GENERIC_WORX(SELECT `user_id` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=Forwared-TFN)
exten => _X.,n,Set(CALLERID(num)=+911246925705)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,Set(${result1}=${EXTEN})
exten => _X.,n,GoSub(peerGet,1(${result1}))
exten => _X.,n,NoOp(sip trunk :: ${trunk})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,bi(mixmvar))
exten => _X.,n,Set(CDR(DID)=${result1})
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Dial(SIP/${trunk}/61${result1:2},60,U(forward_ans,${UNIQUEID}^${extension}))
exten => _X.,n,NoOp(dialstatus :: ${DIALSTATUS})
exten => _X.,n,StopMixMonitor(${mixmvar})
exten => _X.,n,GotoIf($["${result1}" = ""]?exit:finish_extension,1)
exten => _X.,n(exit),Hangup
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${result1},${global_clin},${destination},${callstatus},2,${extension},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${result1},${global_clin},${destination},${callstatus},2,${extension},${CHANNEL})})
exten => live_call,n,Return
exten => s-NOANSWER,1,Goto(vmmain,${global_did},1)
exten => s-BUSY,1,Goto(vmmain,${global_did},1)
exten => s-ANSWER,1,Goto(finish_extension,1)
exten => s-CONGESTION,1,Goto(vmmain,${global_did},1)
exten => s-CANCEL,1,Hangup
exten => s-CHANUNAVAIL,1,Goto(vmmain,${global_did},1)
exten => finish_extension,1,Hangup
exten => peerGet,1,Set(dialnum=${ARG1})
exten => peerGet,n,Set(prefix2=${dialnum:0:2})
exten => peerGet,n,Set(prefix3=${dialnum:0:3})
exten => peerGet,n,Set(prefix1=${dialnum:0:1})
exten => peerGet,n,Set(prefix4=${dialnum:0:4})
exten => peerGet,n,ExecIf($["${prefix1}": "1"]?Set(trunk=Worx-Carrier))
exten => peerGet,n,ExecIf($["${prefix2}": "91"]?Set(trunk=Worx-Carrier))
exten => peerGet,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()

[forward_ans]
exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
exten => s,n,Set(cut_agent=${ARG2})
exten => s,n,Set(agent_name=)
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Forwared-TFN(connected),${lc_id},3)
exten => s,n,Return()


[Callback-announcement]
exten => s,1,NoOp(${CDR(dstchannel)})
same => n,Set(cut_channel=${CUT(CHANNEL,/,2)})
same => n,Set(cut_agent=${CUT(cut_channel,-,1)})
same => n,Set(CDR(extension)=${cut_agent})
same => n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
same => n,Set(DB(w2c_ext/${lc_id})=${cut_agent})
same => n,Set(DB(w2c_ext_name/${lc_id})=${agent_name})
same => n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},CallBack-Call(connected),${lc_id},3)
same => n,Set(voice=${GENERIC_WORX(select playback from cc_did where did=${global_did})})
same => n,GotoIf($["${voice}" = ""]?return:play)
same => n(play),Wait(1)
same => n,Playback(${voice})
same => n(return),Return()


[blockcaller]
exten => _X.,1,NoOp(${CALLERID(num)})
exten => _X.,n,NoOp("Caller ID IS: ${CALLERID(number)}")
exten => _X.,n,MYSQL(Connect connid localhost root tumko34h1se bigdialer)
exten => _X.,n,MYSQL(Query resultid ${connid} SELECT value,value1 FROM tablename WHERE number='${CALLERID(number)}')
exten => _X.,n,MYSQL(Fetch fetchid ${resultid} name ban)
exten => _X.,n,NoOp("We found: ${value} ${value1}")
exten => _X.,n,MYSQL(Clear ${resultid})
exten => _X.,n,MYSQL(Disconnect ${connid});
exten => _X.,n,Set(CALLERID(name)=${value})
exten => _X.,10,NoOp()
exten => _X.,n,GotoIf($["${value1}" = "1"]?wedontlikeyou,s,1)
exten => _X.,n,Goto(sssmainmenu,s,1)

[wedontlikeyou]
exten => s,1,Hangup()


[Prank-Call]
exten => _X.,1,NoOP(Call processing)
exten => _X.,n,AGI(SSagi/randomcid.php)
exten => _X.,n,Set(__dialnum=${EXTEN})
exten => _X.,n,Dial(SIP/NET2-CALL/${EXTEN},,M(schedule-announcement))
exten => _X.,n,Hangup()



[macro-schedule-announcement]
exten => s,1,Answer()
same=> n,Set(voice=${GENERIC_WORX(select ivr from cc_callback_request where channel =${dialnum})})
same=> n,GotoIf($["${voice}" = ""]?return:play)
same=> n(play),Wait(1)
same=> n,Playback(/var/lib/asterisk/sounds/en/ivr_uploads/${voice})
same=> n(return),Return()

[wild-card-entry]
;exten => _X.,1,Progress()
exten => _X.,1,Noop(Dead calls rising)
exten => _X.,n,Set(CDR(recvip)=${CHANNEL(recvip)})
exten => _X.,n,Set(CDR(userfield)=${CHANNEL(recvip)})
;exten => _X.,n,Set(uri=${SIPCHANINFO(uri)})
;exten => _X.,n,Verbose(3,Unknown call from ${uri} to ${EXTEN})
;exten => _X.,n,System(echo "[${STRFTIME(${EPOCH},,%b %d %H:%M:%S)}] SECURITY[] Unknown Call from ${CALLERIDNUM} to ${EXTEN} IPdetails ${uri}" >> /var/log/asterisk/sipsec.log)
exten => _X.,n,Set(tempo=${CUT(CHANNEL,/,2)})
exten => _X.,n,Set(extension=${CUT(tempo,-,1)})
exten => _X.,n,ExecIf($[${EXTEN:0:3} = 880]?goto(exit))
exten => _X.,n,ExecIf($[${EXTEN:0:2} = 92]?goto(exit))
exten => _X.,n,Set(iduser=${GENERIC_WORX(SELECT `id_cc_card` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(CDR(user_id)=${iduser})
exten => _X.,n,Set(CDR(call_type)=0)
exten => _X.,n,Set(out_cli=${GENERIC_WORX(SELECT `callerid` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(destination=${GENERIC_WORX(select queue_name from cc_queue_member_table where membername=${extension})})
exten => _X.,n,Set(CDR(dest_name)=${destination})
exten => _X.,n,Set(agentName=${GENERIC_WORX(SELECT `agent_name` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(dial_out=${GENERIC_WORX(SELECT `dial_timeout` FROM `cc_sip_buddies` WHERE `name`= ${extension})})
exten => _X.,n,Set(callstatus=OutBOND)
exten => _X.,n,Set(dialnum=${EXTEN})
exten => _X.,n,Set(CALLERID(num)=${out_cli})
exten => _X.,n,Set(CDR(Recordings)=${UNIQUEID}.wav)
exten => _X.,n,Set(CDR(extension)=${extension})
exten => _X.,n,Mixmonitor(${UNIQUEID}.wav,b)
exten => _X.,n,Set(ext_status=${GENERIC_WORX(SELECT `paused` FROM `cc_queue_member_table` WHERE `queue_name` =${destination} AND `membername` = ${extension})})
exten => _X.,n,GotoIf($[${ext_status}" = 1]?dial-${ext_status},1)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,playback(prepaid-callback_intro)
;;;;exten => _X.,n,Dial(SIP/${EXTEN}@NET2-CALL,60,TtHU(wild_card_ans,${UNIQUEID}^${extension}))
exten => _X.,n,playback(goodbye)
exten => _X.,n(exit),playback(prepaid-not-authorized-phonenumber&goodbye)
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${out_cli},${destination},${callstatus},2,${extension},${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${dialnum},${dialnum},${destination},${callstatus},2,${extension},${CHANNEL})})
exten => live_call,n,Return()
exten => dial-1,1,NoOP("Hello Wait A Sec Mr. ${agentName}, We Found the Status of Extension No. ${extension} is OFF Please make it On To start the dialing")
exten => dial-1,n,Agi(SSagi/googletts.agi,"Hello Dear ${agentName}, We Found Your Extension, ${extension}! is OFF, Please Ask To I T Team To make it enable To start the calling, Thank you!",en);
exten => dial-1,n,Hangup()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()


[wild_card_ans]
exten => s,1,Set(DB(snva/cust_ansepoch_${ARG1})=${EPOCH})
exten => s,n,Set(cut_agent=${ARG2})
exten => s,n,Set(agent_name=${GENERIC_WORX(select agent_name from cc_sip_buddies where name = ${cut_agent})})
;exten => s,n,Set(agent_name=select agent_name from cc_sip_buddies where name = ${cut_agent})
exten => s,n,Set(WP_LC_ANS(`agent_number`,`agent_name`,`call_status`,`id`,`status`,`modified`)=${cut_agent},${agent_name},Wild-Card-Outbound(connected),${lc_id},3)
exten => s,n,Return()


[eng-queues]
exten => _X.,1,Progress()
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Playback(custom/eng_third_ivr-3)
exten => _X.,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(qtime_out=${GENERIC_WORX(SELECT `timeout` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(findpriority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,GotoIf($[$["${findpriority}" != ""] & $["${findpriority}" > "0"]]?:jump2queue)
exten => _X.,n,Gosub(queues-ivr,s,1)
exten => _X.,n,Gosub(position-find,s,1(${findpriority},${result1},${global_did}))
exten => _X.,n(jump2queue),Queue(${result1},twW,,,${qtime_out},,,test-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "TIMEOUT"]?jumping-priority,${global_did},1:finish_queue)
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "JOINEMPTY"]?jumping-priority,${global_did},1:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_WORX(SELECT `fail_status` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_WORX(SELECT `fail_dest` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_WORX(SELECT `fail_data` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:jumping-priority,switchcall,start)
exten => _X.,n(finish_queue),Hangup
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()

[span-queues]
exten => _X.,1,Progress()
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Playback(custom/span_ivr_queue_msg)
exten => _X.,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(qtime_out=${GENERIC_WORX(SELECT `timeout` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(findpriority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,GotoIf($[$["${findpriority}" != ""] & $["${findpriority}" > "0"]]?:jump2queue)
exten => _X.,n,Gosub(queues-ivr,s,1)
exten => _X.,n,Gosub(position-find,s,1(${findpriority},${result1},${global_did}))
exten => _X.,n(jump2queue),Queue(${result1},twW,,,${qtime_out},,,test-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "TIMEOUT"]?jumping-priority,${global_did},1:finish_queue)
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "JOINEMPTY"]?jumping-priority,${global_did},1:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_WORX(SELECT `fail_status` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_WORX(SELECT `fail_dest` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_WORX(SELECT `fail_data` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:jumping-priority,switchcall,start)
exten => _X.,n(finish_queue),Hangup
exten => live_call,1,Set(WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${iduser},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 1)})
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 3)})
exten => h,n,NoOp()

[attempts]
exten => _X.,1,GoTo(s,1)
same=>s,1,Set(INVALID=0)
same=>n,Set(INVALID=$[${INVALID}+1])
same=>n,Gotoif($["${INVALID}" < "2"]?:end)
same=>n(end),agi(SSagi/googletts.agi,"Number of attempts exceeded",en)
same=>n,Hangup


[jeevach-0055]
exten => _X.,1,Progress()
exten => _X.,n,Set(callstatus=Inbound)
exten => _X.,n,GoSubIf($[${result1} = 8801]?checktime,1)
exten => _X.,n,GoSub(live_call,1)
exten => _X.,n,Set(qtime_wait=${GENERIC_WORX(UPDATE cc_live_calls Set status = 2 WHERE id = ${lc_id})})
exten => _X.,n,Set(MONITOR_FILENAME=IN-${UNIQUEID}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => _X.,n,MixMonitor(${MONITOR_FILENAME}.wav,b)
exten => _X.,n,Set(CDR(Recordings)=${MONITOR_FILENAME}.wav)
exten => _X.,n,Set(CDR(dest_name)=${result1})
exten => _X.,n,Set(__agentext=${GENERIC_WORX(SELECT `membername` FROM `cc_queue_member_table` WHERE `queue_name`= ${result1})})
exten => _X.,n,NoOP(${agentext})
exten => _X.,n,Set(qtime_out=${GENERIC_WORX(SELECT `timeout` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,Set(findpriority=${GENERIC_WORX(select priority did from cc_did_destination LEFT JOIN cc_did ON cc_did_destination.id_cc_did=cc_did.id where did=${CALLERID(dnid)})})
exten => _X.,n,GotoIf($[$["${findpriority}" != ""] & $["${findpriority}" > "0"]]?:jump2queue)
exten => _X.,n,Gosub(queues-ivr,s,1)
exten => _X.,n,Gosub(position-find,s,1(${findpriority},${result1},${global_did}))
exten => _X.,n(jump2queue),Queue(${result1},twW,,,${qtime_out},,,test-announcement,,${GOSUB_RETVAL})
exten => _X.,n,Verbose(  queuestatus is ${QUEUESTATUS} )
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "TIMEOUT"]?jeevach-voicemail,${result1},1:finish_queue)
exten => _X.,n,GotoIf($[${QUEUESTATUS}" = "JOINEMPTY"]?jeevach-voicemail,${result1},1:finish_queue)
exten => _X.,n,Set(qfail=${GENERIC_WORX(SELECT `fail_status` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${qfail}" = "Y"]?:finish_queue)
exten => _X.,n,Set(__result=${GENERIC_WORX(SELECT `fail_dest` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result}" = ""]?finish_queue)
exten => _X.,n,Set(__result1=${GENERIC_WORX(SELECT `fail_data` FROM `cc_queue_table` WHERE `name`= ${result1})})
exten => _X.,n,GotoIf($["${result1}" = ""]?finish_queue:jeevach-voicemail,${result1},1)
exten => _X.,n(finish_queue),Hangup
exten => checktime,1,GoToIfTime(08:30-11:30,*,*,*?hang)
exten => checktime,n,return
exten => checktime,n(hang),HangUp
exten => live_call,1,Set(WP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})=)
exten => live_call,n,Set(__lc_id=${WP_LC_BEGIN(${userid},${UNIQUEID},${global_did},${global_clin},${result1},${callstatus},1,NULL,${CHANNEL})})
exten => live_call,n,Return()
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,NoOp()


[jeevach-voicemail]
exten => _X.,1,Answer
exten => _X.,n,AGI(SSagi/setaccode.agi)
exten => _X.,n,GoSub(exten-ivr,s,1)
exten => _X.,n,VoiceMail(${result1}@default)
exten => _X.,n,Hangup
exten => h,1,ExecIf($[${lc_id} != ""]?Set(WP_LC_END(`id`)=${lc_id}))
exten => h,n,ExecIf(${GENERIC_WORX(DELETE FROM `cc_live_calls` WHERE  call_id = ${UNIQUEID} AND status = 2)})
exten => h,n,NoOp()


[91-Call]
exten => _X.,1,NoOP(Call processing)
;exten => _X.,n,Set(__callext=${result1})
exten => _X.,n,GoSub(call-announcement,s,1)
;exten => _X.,n,Dial(SIP/${result1},,U(call-announcement))
exten => _X.,n,Dial(SIP/${result1},,tT)
exten => _X.,n,Hangup()

[call-announcement]
exten => s,1,Answer()
same=>n,Set(tempo=${CUT(CHANNEL,/,2)})
same=>n,Set(extension=${CUT(tempo,-,1)})
same=>n,Set(voice=${GENERIC_WORX(select play_ivr from cc_sip_buddies where name =${extension})})
same=>n,GotoIf($["${voice}" = ""]?return:play)
same=>n(play),Wait(1)
same=>n,Playback(/var/lib/asterisk/sounds/en/ivr_uploads/${voice})

same=> n(return),Return()


[macro-didchoke]
exten => s,1,NoOp(Checking for incoming limits and applying if needed)
exten => s,n,Set(MAXDEFAULT="")
exten => s,n,MYSQL(Connect connid localhost root tumko34h1se bigdialer)
exten => s,n,MYSQL(Query resultid ${connid} SELECT ch_limit from cc_did where ch_limit like '%${CALLERID(DNID)}%' LIMIT 1)
exten => s,n,MYSQL(Fetch fetchid ${resultid} DBRESULT)
exten => s,n,MYSQL(Clear ${resultid})
exten => s,n,MYSQL(Disconnect ${connid})
exten => s,n,ExecIf($["${DBRESULT}"=""]?Set(DBRESULT=${CALLERID(DNID)})
exten => s,n,GotoIf($["${DBRESULT}"=""]?exception)
;
exten => s,n,Set(GROUPLIMIT=${CUT(DBRESULT,:,2)})
exten => s,n,ExecIf($["${GROUPLIMIT}"=""]?Set(GROUPLIMIT=${MAXDEFAULT})
exten => s,n,GotoIf($["${GROUPLIMIT}"=""]?exception)
;
exten => s,n,Set(DIDS=${CUT(DBRESULT,:,1)})
exten => s,n,Set(DID1=${CUT(DIDS,\,,1)})
exten => s,n,Set(DID2=${CUT(DIDS,\,,2)})
exten => s,n,Set(DID3=${CUT(DIDS,\,,3)})
exten => s,n,Set(DID4=${CUT(DIDS,\,,4)})
exten => s,n,Set(DID5=${CUT(DIDS,\,,5)})
;
exten => s,n,ExecIf($["${DID1}"!=""]?Set(G1=${GROUP_COUNT(${DID1})}))
exten => s,n,ExecIf($["${DID2}"!=""]?Set(G2=${GROUP_COUNT(${DID2})}))
exten => s,n,ExecIf($["${DID3}"!=""]?Set(G3=${GROUP_COUNT(${DID3})}))
exten => s,n,ExecIf($["${DID4}"!=""]?Set(G4=${GROUP_COUNT(${DID4})}))
exten => s,n,ExecIf($["${DID5}"!=""]?Set(G5=${GROUP_COUNT(${DID5})}))
;
exten => s,n,ExecIf($["${DID1}"=""]?Set(G1=0)
exten => s,n,ExecIf($["${DID2}"=""]?Set(G2=0)
exten => s,n,ExecIf($["${DID3}"=""]?Set(G3=0)
exten => s,n,ExecIf($["${DID4}"=""]?Set(G4=0)
exten => s,n,ExecIf($["${DID5}"=""]?Set(G5=0)
;
exten => s,n,Set(TOTALGGROUPCHANS=$[${G1}+${G2}+${G3}+${G4}+${G5}])
exten => s,n,NoOp(So total channels here are ${TOTALGGROUPCHANS} of GROUPLIMIT of ${GROUPLIMIT})
exten => s,n,GotoIf($["${TOTALGGROUPCHANS}" > "${GROUPLIMIT}"]?overlimit)
exten => s,n,MacroExit()
;
;exten => s,n(overlimit),Busy(20)
exten => s,n(overlimit),Goto(DID-TFN,${EXTEN},1)
exten => s,n,Hangup(16)
exten => s,n,MacroExit()
;
exten => s,n(exception),MacroExit()
;exten => s,n(exception),Goto(DID-TFN,${EXTEN},1)


[DND]
exten => *99,1,Macro(DND)
exten => *99,n,hangup

[macro-DND]
exten => s,1,noop(–macro DND device=${CALLERID(name)}–)
exten => s,n,GotoIf(${DB_EXISTS(DND/"${CALLERID(name)}")}?disabled-dnd,1)
exten => s,n,Set(DB(DND/"${CALLERID(name)}")=“1”) ;There was no entry on AstDB, so We active your DND
exten => s,n,playback(do-not-disturb)
exten => s,n,playback(activated)
exten => s,n,hangup
exten => disabled-dnd,1,noop(–DND Deactivated–)
exten => disabled-dnd,n,DBdel(DND/"${CALLERID(name)}") ; You are disabling your DND
exten => disabled-dnd,n,playback(do-not-disturb)
exten => disabled-dnd,n,playback(de-activated)
exten => disabled-dnd,n,hangup
exten => h,1,hangup


[macro-exten]
exten => _X.,1,GotoIf(${DB_EXISTS(DND/${EXTEN})}?DND-ON,1);
exten => _X.,n,Dial(SIP/${EXTEN},20,t)
exten => _X.,n,Goto(s-${DIALSTATUS},1)
exten => s-BUSY,1,Voicemail(b${EXTEN}@default)
exten => s-BUSY,n,hangup
exten =>_s-.,1,Voicemail(u${EXTEN}@default)
exten =>_s-.,n,hangup
exten => DND-ON,1,Goto(_s-.,1)

[DND]
exten => *99,1,GotoIf(${DB_EXISTS(DND/${CALLERID(num)})}?disable-dnd,1)
exten => *99,n,Set(DB(DND/${CALLERID(num)})=1)
exten => *99,n,playback(do-not-disturb)
exten => *99,n,playback(activated)
exten => *99,n,hangup
exten => disable-dnd,1,DBdel(DND/${CALLERID(num)})
exten => disable-dnd,n,playback(do-not-disturb)
exten => disable-dnd,n,playback(de-activated)
exten => disable-dnd,n,hangup


[Volume_test]
exten => X.,1,Set(VOLUME(TX)=5)
exten => X.,n,Set(VOLUME(RX)=5)
;exten => X.,n,Set(VOLUME(RX,p)=4) ;for


